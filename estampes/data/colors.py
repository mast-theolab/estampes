"""Provide color information.

The module provides several types of information like:
* dictionaries of RGB color names.
"""

import typing as tp

from estampes.base.errors import ArgumentError

MPL_COLORS = {
    'C0'.casefold(): (0x1F, 0x77, 0xB4),
    'C1'.casefold(): (0xFF, 0x7F, 0x0C),
    'C2'.casefold(): (0x2C, 0xA0, 0x2C),
    'C3'.casefold(): (0xD6, 0x27, 0x28),
    'C4'.casefold(): (0x94, 0x67, 0xBD),
    'C5'.casefold(): (0x8C, 0x56, 0x4B),
    'C6'.casefold(): (0xE3, 0x77, 0xC2),
    'C7'.casefold(): (0x7F, 0x7F, 0x7F),
    'C8'.casefold(): (0xBC, 0xBD, 0x22),
    'C9'.casefold(): (0x17, 0xBE, 0xCF)
}

X11_COLORS = {  # X11 color names
    'AliceBlue'.casefold(): (240, 248, 255),
    'AntiqueWhite'.casefold(): (250, 235, 215),
    'AntiqueWhite1'.casefold(): (255, 239, 219),
    'AntiqueWhite2'.casefold(): (238, 223, 204),
    'AntiqueWhite3'.casefold(): (205, 192, 176),
    'AntiqueWhite4'.casefold(): (139, 131, 120),
    'BlanchedAlmond'.casefold(): (255, 235, 205),
    'BlueViolet'.casefold(): (138, 43, 226),
    'CadetBlue'.casefold(): (95, 158, 160),
    'CadetBlue1'.casefold(): (152, 245, 255),
    'CadetBlue2'.casefold(): (142, 229, 238),
    'CadetBlue3'.casefold(): (122, 197, 205),
    'CadetBlue4'.casefold(): (83, 134, 139),
    'CornflowerBlue'.casefold(): (100, 149, 237),
    'DarkBlue'.casefold(): (0, 0, 139),
    'DarkCyan'.casefold(): (0, 139, 139),
    'DarkGoldenrod'.casefold(): (184, 134, 11),
    'DarkGoldenrod1'.casefold(): (255, 185, 15),
    'DarkGoldenrod2'.casefold(): (238, 173, 14),
    'DarkGoldenrod3'.casefold(): (205, 149, 12),
    'DarkGoldenrod4'.casefold(): (139, 101, 8),
    'DarkGray'.casefold(): (169, 169, 169),
    'DarkGreen'.casefold(): (0, 100, 0),
    'DarkGrey'.casefold(): (169, 169, 169),
    'DarkKhaki'.casefold(): (189, 183, 107),
    'DarkMagenta'.casefold(): (139, 0, 139),
    'DarkOliveGreen'.casefold(): (85, 107, 47),
    'DarkOliveGreen1'.casefold(): (202, 255, 112),
    'DarkOliveGreen2'.casefold(): (188, 238, 104),
    'DarkOliveGreen3'.casefold(): (162, 205, 90),
    'DarkOliveGreen4'.casefold(): (110, 139, 61),
    'DarkOrange'.casefold(): (255, 140, 0),
    'DarkOrange1'.casefold(): (255, 127, 0),
    'DarkOrange2'.casefold(): (238, 118, 0),
    'DarkOrange3'.casefold(): (205, 102, 0),
    'DarkOrange4'.casefold(): (139, 69, 0),
    'DarkOrchid'.casefold(): (153, 50, 204),
    'DarkOrchid1'.casefold(): (191, 62, 255),
    'DarkOrchid2'.casefold(): (178, 58, 238),
    'DarkOrchid3'.casefold(): (154, 50, 205),
    'DarkOrchid4'.casefold(): (104, 34, 139),
    'DarkRed'.casefold(): (139, 0, 0),
    'DarkSalmon'.casefold(): (233, 150, 122),
    'DarkSeaGreen'.casefold(): (143, 188, 143),
    'DarkSeaGreen1'.casefold(): (193, 255, 193),
    'DarkSeaGreen2'.casefold(): (180, 238, 180),
    'DarkSeaGreen3'.casefold(): (155, 205, 155),
    'DarkSeaGreen4'.casefold(): (105, 139, 105),
    'DarkSlateBlue'.casefold(): (72, 61, 139),
    'DarkSlateGray'.casefold(): (47, 79, 79),
    'DarkSlateGray1'.casefold(): (151, 255, 255),
    'DarkSlateGray2'.casefold(): (141, 238, 238),
    'DarkSlateGray3'.casefold(): (121, 205, 205),
    'DarkSlateGray4'.casefold(): (82, 139, 139),
    'DarkSlateGrey'.casefold(): (47, 79, 79),
    'DarkTurquoise'.casefold(): (0, 206, 209),
    'DarkViolet'.casefold(): (148, 0, 211),
    'DebianRed'.casefold(): (215, 7, 81),
    'DeepPink'.casefold(): (255, 20, 147),
    'DeepPink1'.casefold(): (255, 20, 147),
    'DeepPink2'.casefold(): (238, 18, 137),
    'DeepPink3'.casefold(): (205, 16, 118),
    'DeepPink4'.casefold(): (139, 10, 80),
    'DeepSkyBlue'.casefold(): (0, 191, 255),
    'DeepSkyBlue1'.casefold(): (0, 191, 255),
    'DeepSkyBlue2'.casefold(): (0, 178, 238),
    'DeepSkyBlue3'.casefold(): (0, 154, 205),
    'DeepSkyBlue4'.casefold(): (0, 104, 139),
    'DimGray'.casefold(): (105, 105, 105),
    'DimGrey'.casefold(): (105, 105, 105),
    'DodgerBlue'.casefold(): (30, 144, 255),
    'DodgerBlue1'.casefold(): (30, 144, 255),
    'DodgerBlue2'.casefold(): (28, 134, 238),
    'DodgerBlue3'.casefold(): (24, 116, 205),
    'DodgerBlue4'.casefold(): (16, 78, 139),
    'FloralWhite'.casefold(): (255, 250, 240),
    'ForestGreen'.casefold(): (34, 139, 34),
    'GhostWhite'.casefold(): (248, 248, 255),
    'GreenYellow'.casefold(): (173, 255, 47),
    'HotPink'.casefold(): (255, 105, 180),
    'HotPink1'.casefold(): (255, 110, 180),
    'HotPink2'.casefold(): (238, 106, 167),
    'HotPink3'.casefold(): (205, 96, 144),
    'HotPink4'.casefold(): (139, 58, 98),
    'IndianRed'.casefold(): (205, 92, 92),
    'IndianRed1'.casefold(): (255, 106, 106),
    'IndianRed2'.casefold(): (238, 99, 99),
    'IndianRed3'.casefold(): (205, 85, 85),
    'IndianRed4'.casefold(): (139, 58, 58),
    'LavenderBlush'.casefold(): (255, 240, 245),
    'LavenderBlush1'.casefold(): (255, 240, 245),
    'LavenderBlush2'.casefold(): (238, 224, 229),
    'LavenderBlush3'.casefold(): (205, 193, 197),
    'LavenderBlush4'.casefold(): (139, 131, 134),
    'LawnGreen'.casefold(): (124, 252, 0),
    'LemonChiffon'.casefold(): (255, 250, 205),
    'LemonChiffon1'.casefold(): (255, 250, 205),
    'LemonChiffon2'.casefold(): (238, 233, 191),
    'LemonChiffon3'.casefold(): (205, 201, 165),
    'LemonChiffon4'.casefold(): (139, 137, 112),
    'LightBlue'.casefold(): (173, 216, 230),
    'LightBlue1'.casefold(): (191, 239, 255),
    'LightBlue2'.casefold(): (178, 223, 238),
    'LightBlue3'.casefold(): (154, 192, 205),
    'LightBlue4'.casefold(): (104, 131, 139),
    'LightCoral'.casefold(): (240, 128, 128),
    'LightCyan'.casefold(): (224, 255, 255),
    'LightCyan1'.casefold(): (224, 255, 255),
    'LightCyan2'.casefold(): (209, 238, 238),
    'LightCyan3'.casefold(): (180, 205, 205),
    'LightCyan4'.casefold(): (122, 139, 139),
    'LightGoldenrod'.casefold(): (238, 221, 130),
    'LightGoldenrod1'.casefold(): (255, 236, 139),
    'LightGoldenrod2'.casefold(): (238, 220, 130),
    'LightGoldenrod3'.casefold(): (205, 190, 112),
    'LightGoldenrod4'.casefold(): (139, 129, 76),
    'LightGoldenrodYellow'.casefold(): (250, 250, 210),
    'LightGray'.casefold(): (211, 211, 211),
    'LightGreen'.casefold(): (144, 238, 144),
    'LightGrey'.casefold(): (211, 211, 211),
    'LightPink'.casefold(): (255, 182, 193),
    'LightPink1'.casefold(): (255, 174, 185),
    'LightPink2'.casefold(): (238, 162, 173),
    'LightPink3'.casefold(): (205, 140, 149),
    'LightPink4'.casefold(): (139, 95, 101),
    'LightSalmon'.casefold(): (255, 160, 122),
    'LightSalmon1'.casefold(): (255, 160, 122),
    'LightSalmon2'.casefold(): (238, 149, 114),
    'LightSalmon3'.casefold(): (205, 129, 98),
    'LightSalmon4'.casefold(): (139, 87, 66),
    'LightSeaGreen'.casefold(): (32, 178, 170),
    'LightSkyBlue'.casefold(): (135, 206, 250),
    'LightSkyBlue1'.casefold(): (176, 226, 255),
    'LightSkyBlue2'.casefold(): (164, 211, 238),
    'LightSkyBlue3'.casefold(): (141, 182, 205),
    'LightSkyBlue4'.casefold(): (96, 123, 139),
    'LightSlateBlue'.casefold(): (132, 112, 255),
    'LightSlateGray'.casefold(): (119, 136, 153),
    'LightSlateGrey'.casefold(): (119, 136, 153),
    'LightSteelBlue'.casefold(): (176, 196, 222),
    'LightSteelBlue1'.casefold(): (202, 225, 255),
    'LightSteelBlue2'.casefold(): (188, 210, 238),
    'LightSteelBlue3'.casefold(): (162, 181, 205),
    'LightSteelBlue4'.casefold(): (110, 123, 139),
    'LightYellow'.casefold(): (255, 255, 224),
    'LightYellow1'.casefold(): (255, 255, 224),
    'LightYellow2'.casefold(): (238, 238, 209),
    'LightYellow3'.casefold(): (205, 205, 180),
    'LightYellow4'.casefold(): (139, 139, 122),
    'LimeGreen'.casefold(): (50, 205, 50),
    'MediumAquamarine'.casefold(): (102, 205, 170),
    'MediumBlue'.casefold(): (0, 0, 205),
    'MediumOrchid'.casefold(): (186, 85, 211),
    'MediumOrchid1'.casefold(): (224, 102, 255),
    'MediumOrchid2'.casefold(): (209, 95, 238),
    'MediumOrchid3'.casefold(): (180, 82, 205),
    'MediumOrchid4'.casefold(): (122, 55, 139),
    'MediumPurple'.casefold(): (147, 112, 219),
    'MediumPurple1'.casefold(): (171, 130, 255),
    'MediumPurple2'.casefold(): (159, 121, 238),
    'MediumPurple3'.casefold(): (137, 104, 205),
    'MediumPurple4'.casefold(): (93, 71, 139),
    'MediumSeaGreen'.casefold(): (60, 179, 113),
    'MediumSlateBlue'.casefold(): (123, 104, 238),
    'MediumSpringGreen'.casefold(): (0, 250, 154),
    'MediumTurquoise'.casefold(): (72, 209, 204),
    'MediumVioletRed'.casefold(): (199, 21, 133),
    'MidnightBlue'.casefold(): (25, 25, 112),
    'MintCream'.casefold(): (245, 255, 250),
    'MistyRose'.casefold(): (255, 228, 225),
    'MistyRose1'.casefold(): (255, 228, 225),
    'MistyRose2'.casefold(): (238, 213, 210),
    'MistyRose3'.casefold(): (205, 183, 181),
    'MistyRose4'.casefold(): (139, 125, 123),
    'NavajoWhite'.casefold(): (255, 222, 173),
    'NavajoWhite1'.casefold(): (255, 222, 173),
    'NavajoWhite2'.casefold(): (238, 207, 161),
    'NavajoWhite3'.casefold(): (205, 179, 139),
    'NavajoWhite4'.casefold(): (139, 121, 94),
    'NavyBlue'.casefold(): (0, 0, 128),
    'OldLace'.casefold(): (253, 245, 230),
    'OliveDrab'.casefold(): (107, 142, 35),
    'OliveDrab1'.casefold(): (192, 255, 62),
    'OliveDrab2'.casefold(): (179, 238, 58),
    'OliveDrab3'.casefold(): (154, 205, 50),
    'OliveDrab4'.casefold(): (105, 139, 34),
    'OrangeRed'.casefold(): (255, 69, 0),
    'OrangeRed1'.casefold(): (255, 69, 0),
    'OrangeRed2'.casefold(): (238, 64, 0),
    'OrangeRed3'.casefold(): (205, 55, 0),
    'OrangeRed4'.casefold(): (139, 37, 0),
    'PaleGoldenrod'.casefold(): (238, 232, 170),
    'PaleGreen'.casefold(): (152, 251, 152),
    'PaleGreen1'.casefold(): (154, 255, 154),
    'PaleGreen2'.casefold(): (144, 238, 144),
    'PaleGreen3'.casefold(): (124, 205, 124),
    'PaleGreen4'.casefold(): (84, 139, 84),
    'PaleTurquoise'.casefold(): (175, 238, 238),
    'PaleTurquoise1'.casefold(): (187, 255, 255),
    'PaleTurquoise2'.casefold(): (174, 238, 238),
    'PaleTurquoise3'.casefold(): (150, 205, 205),
    'PaleTurquoise4'.casefold(): (102, 139, 139),
    'PaleVioletRed'.casefold(): (219, 112, 147),
    'PaleVioletRed1'.casefold(): (255, 130, 171),
    'PaleVioletRed2'.casefold(): (238, 121, 159),
    'PaleVioletRed3'.casefold(): (205, 104, 137),
    'PaleVioletRed4'.casefold(): (139, 71, 93),
    'PapayaWhip'.casefold(): (255, 239, 213),
    'PeachPuff'.casefold(): (255, 218, 185),
    'PeachPuff1'.casefold(): (255, 218, 185),
    'PeachPuff2'.casefold(): (238, 203, 173),
    'PeachPuff3'.casefold(): (205, 175, 149),
    'PeachPuff4'.casefold(): (139, 119, 101),
    'PowderBlue'.casefold(): (176, 224, 230),
    'RosyBrown'.casefold(): (188, 143, 143),
    'RosyBrown1'.casefold(): (255, 193, 193),
    'RosyBrown2'.casefold(): (238, 180, 180),
    'RosyBrown3'.casefold(): (205, 155, 155),
    'RosyBrown4'.casefold(): (139, 105, 105),
    'RoyalBlue'.casefold(): (65, 105, 225),
    'RoyalBlue1'.casefold(): (72, 118, 255),
    'RoyalBlue2'.casefold(): (67, 110, 238),
    'RoyalBlue3'.casefold(): (58, 95, 205),
    'RoyalBlue4'.casefold(): (39, 64, 139),
    'SaddleBrown'.casefold(): (139, 69, 19),
    'SandyBrown'.casefold(): (244, 164, 96),
    'SeaGreen'.casefold(): (46, 139, 87),
    'SeaGreen1'.casefold(): (84, 255, 159),
    'SeaGreen2'.casefold(): (78, 238, 148),
    'SeaGreen3'.casefold(): (67, 205, 128),
    'SeaGreen4'.casefold(): (46, 139, 87),
    'SkyBlue'.casefold(): (135, 206, 235),
    'SkyBlue1'.casefold(): (135, 206, 255),
    'SkyBlue2'.casefold(): (126, 192, 238),
    'SkyBlue3'.casefold(): (108, 166, 205),
    'SkyBlue4'.casefold(): (74, 112, 139),
    'SlateBlue'.casefold(): (106, 90, 205),
    'SlateBlue1'.casefold(): (131, 111, 255),
    'SlateBlue2'.casefold(): (122, 103, 238),
    'SlateBlue3'.casefold(): (105, 89, 205),
    'SlateBlue4'.casefold(): (71, 60, 139),
    'SlateGray'.casefold(): (112, 128, 144),
    'SlateGray1'.casefold(): (198, 226, 255),
    'SlateGray2'.casefold(): (185, 211, 238),
    'SlateGray3'.casefold(): (159, 182, 205),
    'SlateGray4'.casefold(): (108, 123, 139),
    'SlateGrey'.casefold(): (112, 128, 144),
    'SpringGreen'.casefold(): (0, 255, 127),
    'SpringGreen1'.casefold(): (0, 255, 127),
    'SpringGreen2'.casefold(): (0, 238, 118),
    'SpringGreen3'.casefold(): (0, 205, 102),
    'SpringGreen4'.casefold(): (0, 139, 69),
    'SteelBlue'.casefold(): (70, 130, 180),
    'SteelBlue1'.casefold(): (99, 184, 255),
    'SteelBlue2'.casefold(): (92, 172, 238),
    'SteelBlue3'.casefold(): (79, 148, 205),
    'SteelBlue4'.casefold(): (54, 100, 139),
    'VioletRed'.casefold(): (208, 32, 144),
    'VioletRed1'.casefold(): (255, 62, 150),
    'VioletRed2'.casefold(): (238, 58, 140),
    'VioletRed3'.casefold(): (205, 50, 120),
    'VioletRed4'.casefold(): (139, 34, 82),
    'WhiteSmoke'.casefold(): (245, 245, 245),
    'YellowGreen'.casefold(): (154, 205, 50),
    'alice blue'.casefold(): (240, 248, 255),
    'antique white'.casefold(): (250, 235, 215),
    'aquamarine'.casefold(): (127, 255, 212),
    'aquamarine1'.casefold(): (127, 255, 212),
    'aquamarine2'.casefold(): (118, 238, 198),
    'aquamarine3'.casefold(): (102, 205, 170),
    'aquamarine4'.casefold(): (69, 139, 116),
    'azure'.casefold(): (240, 255, 255),
    'azure1'.casefold(): (240, 255, 255),
    'azure2'.casefold(): (224, 238, 238),
    'azure3'.casefold(): (193, 205, 205),
    'azure4'.casefold(): (131, 139, 139),
    'beige'.casefold(): (245, 245, 220),
    'bisque'.casefold(): (255, 228, 196),
    'bisque1'.casefold(): (255, 228, 196),
    'bisque2'.casefold(): (238, 213, 183),
    'bisque3'.casefold(): (205, 183, 158),
    'bisque4'.casefold(): (139, 125, 107),
    'black'.casefold(): (0, 0, 0),
    'blanched almond'.casefold(): (255, 235, 205),
    'blue violet'.casefold(): (138, 43, 226),
    'blue'.casefold(): (0, 0, 255),
    'blue1'.casefold(): (0, 0, 255),
    'blue2'.casefold(): (0, 0, 238),
    'blue3'.casefold(): (0, 0, 205),
    'blue4'.casefold(): (0, 0, 139),
    'brown'.casefold(): (165, 42, 42),
    'brown1'.casefold(): (255, 64, 64),
    'brown2'.casefold(): (238, 59, 59),
    'brown3'.casefold(): (205, 51, 51),
    'brown4'.casefold(): (139, 35, 35),
    'burlywood'.casefold(): (222, 184, 135),
    'burlywood1'.casefold(): (255, 211, 155),
    'burlywood2'.casefold(): (238, 197, 145),
    'burlywood3'.casefold(): (205, 170, 125),
    'burlywood4'.casefold(): (139, 115, 85),
    'cadet blue'.casefold(): (95, 158, 160),
    'chartreuse'.casefold(): (127, 255, 0),
    'chartreuse1'.casefold(): (127, 255, 0),
    'chartreuse2'.casefold(): (118, 238, 0),
    'chartreuse3'.casefold(): (102, 205, 0),
    'chartreuse4'.casefold(): (69, 139, 0),
    'chocolate'.casefold(): (210, 105, 30),
    'chocolate1'.casefold(): (255, 127, 36),
    'chocolate2'.casefold(): (238, 118, 33),
    'chocolate3'.casefold(): (205, 102, 29),
    'chocolate4'.casefold(): (139, 69, 19),
    'coral'.casefold(): (255, 127, 80),
    'coral1'.casefold(): (255, 114, 86),
    'coral2'.casefold(): (238, 106, 80),
    'coral3'.casefold(): (205, 91, 69),
    'coral4'.casefold(): (139, 62, 47),
    'cornflower blue'.casefold(): (100, 149, 237),
    'cornsilk'.casefold(): (255, 248, 220),
    'cornsilk1'.casefold(): (255, 248, 220),
    'cornsilk2'.casefold(): (238, 232, 205),
    'cornsilk3'.casefold(): (205, 200, 177),
    'cornsilk4'.casefold(): (139, 136, 120),
    'cyan'.casefold(): (0, 255, 255),
    'cyan1'.casefold(): (0, 255, 255),
    'cyan2'.casefold(): (0, 238, 238),
    'cyan3'.casefold(): (0, 205, 205),
    'cyan4'.casefold(): (0, 139, 139),
    'dark blue'.casefold(): (0, 0, 139),
    'dark cyan'.casefold(): (0, 139, 139),
    'dark goldenrod'.casefold(): (184, 134, 11),
    'dark gray'.casefold(): (169, 169, 169),
    'dark green'.casefold(): (0, 100, 0),
    'dark grey'.casefold(): (169, 169, 169),
    'dark khaki'.casefold(): (189, 183, 107),
    'dark magenta'.casefold(): (139, 0, 139),
    'dark olive green'.casefold(): (85, 107, 47),
    'dark orange'.casefold(): (255, 140, 0),
    'dark orchid'.casefold(): (153, 50, 204),
    'dark red'.casefold(): (139, 0, 0),
    'dark salmon'.casefold(): (233, 150, 122),
    'dark sea green'.casefold(): (143, 188, 143),
    'dark slate blue'.casefold(): (72, 61, 139),
    'dark slate gray'.casefold(): (47, 79, 79),
    'dark slate grey'.casefold(): (47, 79, 79),
    'dark turquoise'.casefold(): (0, 206, 209),
    'dark violet'.casefold(): (148, 0, 211),
    'deep pink'.casefold(): (255, 20, 147),
    'deep sky blue'.casefold(): (0, 191, 255),
    'dim gray'.casefold(): (105, 105, 105),
    'dim grey'.casefold(): (105, 105, 105),
    'dodger blue'.casefold(): (30, 144, 255),
    'firebrick'.casefold(): (178, 34, 34),
    'firebrick1'.casefold(): (255, 48, 48),
    'firebrick2'.casefold(): (238, 44, 44),
    'firebrick3'.casefold(): (205, 38, 38),
    'firebrick4'.casefold(): (139, 26, 26),
    'floral white'.casefold(): (255, 250, 240),
    'forest green'.casefold(): (34, 139, 34),
    'gainsboro'.casefold(): (220, 220, 220),
    'ghost white'.casefold(): (248, 248, 255),
    'gold'.casefold(): (255, 215, 0),
    'gold1'.casefold(): (255, 215, 0),
    'gold2'.casefold(): (238, 201, 0),
    'gold3'.casefold(): (205, 173, 0),
    'gold4'.casefold(): (139, 117, 0),
    'goldenrod'.casefold(): (218, 165, 32),
    'goldenrod1'.casefold(): (255, 193, 37),
    'goldenrod2'.casefold(): (238, 180, 34),
    'goldenrod3'.casefold(): (205, 155, 29),
    'goldenrod4'.casefold(): (139, 105, 20),
    'gray'.casefold(): (190, 190, 190),
    'gray0'.casefold(): (0, 0, 0),
    'gray1'.casefold(): (3, 3, 3),
    'gray10'.casefold(): (26, 26, 26),
    'gray100'.casefold(): (255, 255, 255),
    'gray11'.casefold(): (28, 28, 28),
    'gray12'.casefold(): (31, 31, 31),
    'gray13'.casefold(): (33, 33, 33),
    'gray14'.casefold(): (36, 36, 36),
    'gray15'.casefold(): (38, 38, 38),
    'gray16'.casefold(): (41, 41, 41),
    'gray17'.casefold(): (43, 43, 43),
    'gray18'.casefold(): (46, 46, 46),
    'gray19'.casefold(): (48, 48, 48),
    'gray2'.casefold(): (5, 5, 5),
    'gray20'.casefold(): (51, 51, 51),
    'gray21'.casefold(): (54, 54, 54),
    'gray22'.casefold(): (56, 56, 56),
    'gray23'.casefold(): (59, 59, 59),
    'gray24'.casefold(): (61, 61, 61),
    'gray25'.casefold(): (64, 64, 64),
    'gray26'.casefold(): (66, 66, 66),
    'gray27'.casefold(): (69, 69, 69),
    'gray28'.casefold(): (71, 71, 71),
    'gray29'.casefold(): (74, 74, 74),
    'gray3'.casefold(): (8, 8, 8),
    'gray30'.casefold(): (77, 77, 77),
    'gray31'.casefold(): (79, 79, 79),
    'gray32'.casefold(): (82, 82, 82),
    'gray33'.casefold(): (84, 84, 84),
    'gray34'.casefold(): (87, 87, 87),
    'gray35'.casefold(): (89, 89, 89),
    'gray36'.casefold(): (92, 92, 92),
    'gray37'.casefold(): (94, 94, 94),
    'gray38'.casefold(): (97, 97, 97),
    'gray39'.casefold(): (99, 99, 99),
    'gray4'.casefold(): (10, 10, 10),
    'gray40'.casefold(): (102, 102, 102),
    'gray41'.casefold(): (105, 105, 105),
    'gray42'.casefold(): (107, 107, 107),
    'gray43'.casefold(): (110, 110, 110),
    'gray44'.casefold(): (112, 112, 112),
    'gray45'.casefold(): (115, 115, 115),
    'gray46'.casefold(): (117, 117, 117),
    'gray47'.casefold(): (120, 120, 120),
    'gray48'.casefold(): (122, 122, 122),
    'gray49'.casefold(): (125, 125, 125),
    'gray5'.casefold(): (13, 13, 13),
    'gray50'.casefold(): (127, 127, 127),
    'gray51'.casefold(): (130, 130, 130),
    'gray52'.casefold(): (133, 133, 133),
    'gray53'.casefold(): (135, 135, 135),
    'gray54'.casefold(): (138, 138, 138),
    'gray55'.casefold(): (140, 140, 140),
    'gray56'.casefold(): (143, 143, 143),
    'gray57'.casefold(): (145, 145, 145),
    'gray58'.casefold(): (148, 148, 148),
    'gray59'.casefold(): (150, 150, 150),
    'gray6'.casefold(): (15, 15, 15),
    'gray60'.casefold(): (153, 153, 153),
    'gray61'.casefold(): (156, 156, 156),
    'gray62'.casefold(): (158, 158, 158),
    'gray63'.casefold(): (161, 161, 161),
    'gray64'.casefold(): (163, 163, 163),
    'gray65'.casefold(): (166, 166, 166),
    'gray66'.casefold(): (168, 168, 168),
    'gray67'.casefold(): (171, 171, 171),
    'gray68'.casefold(): (173, 173, 173),
    'gray69'.casefold(): (176, 176, 176),
    'gray7'.casefold(): (18, 18, 18),
    'gray70'.casefold(): (179, 179, 179),
    'gray71'.casefold(): (181, 181, 181),
    'gray72'.casefold(): (184, 184, 184),
    'gray73'.casefold(): (186, 186, 186),
    'gray74'.casefold(): (189, 189, 189),
    'gray75'.casefold(): (191, 191, 191),
    'gray76'.casefold(): (194, 194, 194),
    'gray77'.casefold(): (196, 196, 196),
    'gray78'.casefold(): (199, 199, 199),
    'gray79'.casefold(): (201, 201, 201),
    'gray8'.casefold(): (20, 20, 20),
    'gray80'.casefold(): (204, 204, 204),
    'gray81'.casefold(): (207, 207, 207),
    'gray82'.casefold(): (209, 209, 209),
    'gray83'.casefold(): (212, 212, 212),
    'gray84'.casefold(): (214, 214, 214),
    'gray85'.casefold(): (217, 217, 217),
    'gray86'.casefold(): (219, 219, 219),
    'gray87'.casefold(): (222, 222, 222),
    'gray88'.casefold(): (224, 224, 224),
    'gray89'.casefold(): (227, 227, 227),
    'gray9'.casefold(): (23, 23, 23),
    'gray90'.casefold(): (229, 229, 229),
    'gray91'.casefold(): (232, 232, 232),
    'gray92'.casefold(): (235, 235, 235),
    'gray93'.casefold(): (237, 237, 237),
    'gray94'.casefold(): (240, 240, 240),
    'gray95'.casefold(): (242, 242, 242),
    'gray96'.casefold(): (245, 245, 245),
    'gray97'.casefold(): (247, 247, 247),
    'gray98'.casefold(): (250, 250, 250),
    'gray99'.casefold(): (252, 252, 252),
    'green yellow'.casefold(): (173, 255, 47),
    'green'.casefold(): (0, 255, 0),
    'green1'.casefold(): (0, 255, 0),
    'green2'.casefold(): (0, 238, 0),
    'green3'.casefold(): (0, 205, 0),
    'green4'.casefold(): (0, 139, 0),
    'grey'.casefold(): (190, 190, 190),
    'grey0'.casefold(): (0, 0, 0),
    'grey1'.casefold(): (3, 3, 3),
    'grey10'.casefold(): (26, 26, 26),
    'grey100'.casefold(): (255, 255, 255),
    'grey11'.casefold(): (28, 28, 28),
    'grey12'.casefold(): (31, 31, 31),
    'grey13'.casefold(): (33, 33, 33),
    'grey14'.casefold(): (36, 36, 36),
    'grey15'.casefold(): (38, 38, 38),
    'grey16'.casefold(): (41, 41, 41),
    'grey17'.casefold(): (43, 43, 43),
    'grey18'.casefold(): (46, 46, 46),
    'grey19'.casefold(): (48, 48, 48),
    'grey2'.casefold(): (5, 5, 5),
    'grey20'.casefold(): (51, 51, 51),
    'grey21'.casefold(): (54, 54, 54),
    'grey22'.casefold(): (56, 56, 56),
    'grey23'.casefold(): (59, 59, 59),
    'grey24'.casefold(): (61, 61, 61),
    'grey25'.casefold(): (64, 64, 64),
    'grey26'.casefold(): (66, 66, 66),
    'grey27'.casefold(): (69, 69, 69),
    'grey28'.casefold(): (71, 71, 71),
    'grey29'.casefold(): (74, 74, 74),
    'grey3'.casefold(): (8, 8, 8),
    'grey30'.casefold(): (77, 77, 77),
    'grey31'.casefold(): (79, 79, 79),
    'grey32'.casefold(): (82, 82, 82),
    'grey33'.casefold(): (84, 84, 84),
    'grey34'.casefold(): (87, 87, 87),
    'grey35'.casefold(): (89, 89, 89),
    'grey36'.casefold(): (92, 92, 92),
    'grey37'.casefold(): (94, 94, 94),
    'grey38'.casefold(): (97, 97, 97),
    'grey39'.casefold(): (99, 99, 99),
    'grey4'.casefold(): (10, 10, 10),
    'grey40'.casefold(): (102, 102, 102),
    'grey41'.casefold(): (105, 105, 105),
    'grey42'.casefold(): (107, 107, 107),
    'grey43'.casefold(): (110, 110, 110),
    'grey44'.casefold(): (112, 112, 112),
    'grey45'.casefold(): (115, 115, 115),
    'grey46'.casefold(): (117, 117, 117),
    'grey47'.casefold(): (120, 120, 120),
    'grey48'.casefold(): (122, 122, 122),
    'grey49'.casefold(): (125, 125, 125),
    'grey5'.casefold(): (13, 13, 13),
    'grey50'.casefold(): (127, 127, 127),
    'grey51'.casefold(): (130, 130, 130),
    'grey52'.casefold(): (133, 133, 133),
    'grey53'.casefold(): (135, 135, 135),
    'grey54'.casefold(): (138, 138, 138),
    'grey55'.casefold(): (140, 140, 140),
    'grey56'.casefold(): (143, 143, 143),
    'grey57'.casefold(): (145, 145, 145),
    'grey58'.casefold(): (148, 148, 148),
    'grey59'.casefold(): (150, 150, 150),
    'grey6'.casefold(): (15, 15, 15),
    'grey60'.casefold(): (153, 153, 153),
    'grey61'.casefold(): (156, 156, 156),
    'grey62'.casefold(): (158, 158, 158),
    'grey63'.casefold(): (161, 161, 161),
    'grey64'.casefold(): (163, 163, 163),
    'grey65'.casefold(): (166, 166, 166),
    'grey66'.casefold(): (168, 168, 168),
    'grey67'.casefold(): (171, 171, 171),
    'grey68'.casefold(): (173, 173, 173),
    'grey69'.casefold(): (176, 176, 176),
    'grey7'.casefold(): (18, 18, 18),
    'grey70'.casefold(): (179, 179, 179),
    'grey71'.casefold(): (181, 181, 181),
    'grey72'.casefold(): (184, 184, 184),
    'grey73'.casefold(): (186, 186, 186),
    'grey74'.casefold(): (189, 189, 189),
    'grey75'.casefold(): (191, 191, 191),
    'grey76'.casefold(): (194, 194, 194),
    'grey77'.casefold(): (196, 196, 196),
    'grey78'.casefold(): (199, 199, 199),
    'grey79'.casefold(): (201, 201, 201),
    'grey8'.casefold(): (20, 20, 20),
    'grey80'.casefold(): (204, 204, 204),
    'grey81'.casefold(): (207, 207, 207),
    'grey82'.casefold(): (209, 209, 209),
    'grey83'.casefold(): (212, 212, 212),
    'grey84'.casefold(): (214, 214, 214),
    'grey85'.casefold(): (217, 217, 217),
    'grey86'.casefold(): (219, 219, 219),
    'grey87'.casefold(): (222, 222, 222),
    'grey88'.casefold(): (224, 224, 224),
    'grey89'.casefold(): (227, 227, 227),
    'grey9'.casefold(): (23, 23, 23),
    'grey90'.casefold(): (229, 229, 229),
    'grey91'.casefold(): (232, 232, 232),
    'grey92'.casefold(): (235, 235, 235),
    'grey93'.casefold(): (237, 237, 237),
    'grey94'.casefold(): (240, 240, 240),
    'grey95'.casefold(): (242, 242, 242),
    'grey96'.casefold(): (245, 245, 245),
    'grey97'.casefold(): (247, 247, 247),
    'grey98'.casefold(): (250, 250, 250),
    'grey99'.casefold(): (252, 252, 252),
    'honeydew'.casefold(): (240, 255, 240),
    'honeydew1'.casefold(): (240, 255, 240),
    'honeydew2'.casefold(): (224, 238, 224),
    'honeydew3'.casefold(): (193, 205, 193),
    'honeydew4'.casefold(): (131, 139, 131),
    'hot pink'.casefold(): (255, 105, 180),
    'indian red'.casefold(): (205, 92, 92),
    'ivory'.casefold(): (255, 255, 240),
    'ivory1'.casefold(): (255, 255, 240),
    'ivory2'.casefold(): (238, 238, 224),
    'ivory3'.casefold(): (205, 205, 193),
    'ivory4'.casefold(): (139, 139, 131),
    'khaki'.casefold(): (240, 230, 140),
    'khaki1'.casefold(): (255, 246, 143),
    'khaki2'.casefold(): (238, 230, 133),
    'khaki3'.casefold(): (205, 198, 115),
    'khaki4'.casefold(): (139, 134, 78),
    'lavender blush'.casefold(): (255, 240, 245),
    'lavender'.casefold(): (230, 230, 250),
    'lawn green'.casefold(): (124, 252, 0),
    'lemon chiffon'.casefold(): (255, 250, 205),
    'light blue'.casefold(): (173, 216, 230),
    'light coral'.casefold(): (240, 128, 128),
    'light cyan'.casefold(): (224, 255, 255),
    'light goldenrod yellow'.casefold(): (250, 250, 210),
    'light goldenrod'.casefold(): (238, 221, 130),
    'light gray'.casefold(): (211, 211, 211),
    'light green'.casefold(): (144, 238, 144),
    'light grey'.casefold(): (211, 211, 211),
    'light pink'.casefold(): (255, 182, 193),
    'light salmon'.casefold(): (255, 160, 122),
    'light sea green'.casefold(): (32, 178, 170),
    'light sky blue'.casefold(): (135, 206, 250),
    'light slate blue'.casefold(): (132, 112, 255),
    'light slate gray'.casefold(): (119, 136, 153),
    'light slate grey'.casefold(): (119, 136, 153),
    'light steel blue'.casefold(): (176, 196, 222),
    'light yellow'.casefold(): (255, 255, 224),
    'lime green'.casefold(): (50, 205, 50),
    'linen'.casefold(): (250, 240, 230),
    'magenta'.casefold(): (255, 0, 255),
    'magenta1'.casefold(): (255, 0, 255),
    'magenta2'.casefold(): (238, 0, 238),
    'magenta3'.casefold(): (205, 0, 205),
    'magenta4'.casefold(): (139, 0, 139),
    'maroon'.casefold(): (176, 48, 96),
    'maroon1'.casefold(): (255, 52, 179),
    'maroon2'.casefold(): (238, 48, 167),
    'maroon3'.casefold(): (205, 41, 144),
    'maroon4'.casefold(): (139, 28, 98),
    'medium aquamarine'.casefold(): (102, 205, 170),
    'medium blue'.casefold(): (0, 0, 205),
    'medium orchid'.casefold(): (186, 85, 211),
    'medium purple'.casefold(): (147, 112, 219),
    'medium sea green'.casefold(): (60, 179, 113),
    'medium slate blue'.casefold(): (123, 104, 238),
    'medium spring green'.casefold(): (0, 250, 154),
    'medium turquoise'.casefold(): (72, 209, 204),
    'medium violet red'.casefold(): (199, 21, 133),
    'midnight blue'.casefold(): (25, 25, 112),
    'mint cream'.casefold(): (245, 255, 250),
    'misty rose'.casefold(): (255, 228, 225),
    'moccasin'.casefold(): (255, 228, 181),
    'navajo white'.casefold(): (255, 222, 173),
    'navy blue'.casefold(): (0, 0, 128),
    'navy'.casefold(): (0, 0, 128),
    'old lace'.casefold(): (253, 245, 230),
    'olive drab'.casefold(): (107, 142, 35),
    'orange red'.casefold(): (255, 69, 0),
    'orange'.casefold(): (255, 165, 0),
    'orange1'.casefold(): (255, 165, 0),
    'orange2'.casefold(): (238, 154, 0),
    'orange3'.casefold(): (205, 133, 0),
    'orange4'.casefold(): (139, 90, 0),
    'orchid'.casefold(): (218, 112, 214),
    'orchid1'.casefold(): (255, 131, 250),
    'orchid2'.casefold(): (238, 122, 233),
    'orchid3'.casefold(): (205, 105, 201),
    'orchid4'.casefold(): (139, 71, 137),
    'pale goldenrod'.casefold(): (238, 232, 170),
    'pale green'.casefold(): (152, 251, 152),
    'pale turquoise'.casefold(): (175, 238, 238),
    'pale violet red'.casefold(): (219, 112, 147),
    'papaya whip'.casefold(): (255, 239, 213),
    'peach puff'.casefold(): (255, 218, 185),
    'peru'.casefold(): (205, 133, 63),
    'pink'.casefold(): (255, 192, 203),
    'pink1'.casefold(): (255, 181, 197),
    'pink2'.casefold(): (238, 169, 184),
    'pink3'.casefold(): (205, 145, 158),
    'pink4'.casefold(): (139, 99, 108),
    'plum'.casefold(): (221, 160, 221),
    'plum1'.casefold(): (255, 187, 255),
    'plum2'.casefold(): (238, 174, 238),
    'plum3'.casefold(): (205, 150, 205),
    'plum4'.casefold(): (139, 102, 139),
    'powder blue'.casefold(): (176, 224, 230),
    'purple'.casefold(): (160, 32, 240),
    'purple1'.casefold(): (155, 48, 255),
    'purple2'.casefold(): (145, 44, 238),
    'purple3'.casefold(): (125, 38, 205),
    'purple4'.casefold(): (85, 26, 139),
    'red'.casefold(): (255, 0, 0),
    'red1'.casefold(): (255, 0, 0),
    'red2'.casefold(): (238, 0, 0),
    'red3'.casefold(): (205, 0, 0),
    'red4'.casefold(): (139, 0, 0),
    'rosy brown'.casefold(): (188, 143, 143),
    'royal blue'.casefold(): (65, 105, 225),
    'saddle brown'.casefold(): (139, 69, 19),
    'salmon'.casefold(): (250, 128, 114),
    'salmon1'.casefold(): (255, 140, 105),
    'salmon2'.casefold(): (238, 130, 98),
    'salmon3'.casefold(): (205, 112, 84),
    'salmon4'.casefold(): (139, 76, 57),
    'sandy brown'.casefold(): (244, 164, 96),
    'sea green'.casefold(): (46, 139, 87),
    'seashell'.casefold(): (255, 245, 238),
    'seashell1'.casefold(): (255, 245, 238),
    'seashell2'.casefold(): (238, 229, 222),
    'seashell3'.casefold(): (205, 197, 191),
    'seashell4'.casefold(): (139, 134, 130),
    'sienna'.casefold(): (160, 82, 45),
    'sienna1'.casefold(): (255, 130, 71),
    'sienna2'.casefold(): (238, 121, 66),
    'sienna3'.casefold(): (205, 104, 57),
    'sienna4'.casefold(): (139, 71, 38),
    'sky blue'.casefold(): (135, 206, 235),
    'slate blue'.casefold(): (106, 90, 205),
    'slate gray'.casefold(): (112, 128, 144),
    'slate grey'.casefold(): (112, 128, 144),
    'snow'.casefold(): (255, 250, 250),
    'snow1'.casefold(): (255, 250, 250),
    'snow2'.casefold(): (238, 233, 233),
    'snow3'.casefold(): (205, 201, 201),
    'snow4'.casefold(): (139, 137, 137),
    'spring green'.casefold(): (0, 255, 127),
    'steel blue'.casefold(): (70, 130, 180),
    'tan'.casefold(): (210, 180, 140),
    'tan1'.casefold(): (255, 165, 79),
    'tan2'.casefold(): (238, 154, 73),
    'tan3'.casefold(): (205, 133, 63),
    'tan4'.casefold(): (139, 90, 43),
    'thistle'.casefold(): (216, 191, 216),
    'thistle1'.casefold(): (255, 225, 255),
    'thistle2'.casefold(): (238, 210, 238),
    'thistle3'.casefold(): (205, 181, 205),
    'thistle4'.casefold(): (139, 123, 139),
    'tomato'.casefold(): (255, 99, 71),
    'tomato1'.casefold(): (255, 99, 71),
    'tomato2'.casefold(): (238, 92, 66),
    'tomato3'.casefold(): (205, 79, 57),
    'tomato4'.casefold(): (139, 54, 38),
    'turquoise'.casefold(): (64, 224, 208),
    'turquoise1'.casefold(): (0, 245, 255),
    'turquoise2'.casefold(): (0, 229, 238),
    'turquoise3'.casefold(): (0, 197, 205),
    'turquoise4'.casefold(): (0, 134, 139),
    'violet red'.casefold(): (208, 32, 144),
    'violet'.casefold(): (238, 130, 238),
    'wheat'.casefold(): (245, 222, 179),
    'wheat1'.casefold(): (255, 231, 186),
    'wheat2'.casefold(): (238, 216, 174),
    'wheat3'.casefold(): (205, 186, 150),
    'wheat4'.casefold(): (139, 126, 102),
    'white smoke'.casefold(): (245, 245, 245),
    'white'.casefold(): (255, 255, 255),
    'yellow green'.casefold(): (154, 205, 50),
    'yellow'.casefold(): (255, 255, 0),
    'yellow1'.casefold(): (255, 255, 0),
    'yellow2'.casefold(): (238, 238, 0),
    'yellow3'.casefold(): (205, 205, 0),
    'yellow4'.casefold(): (139, 139, 0)
}

XKCD_COLORS = {
    "acid green".casefold(): (0x8f, 0xfe, 0x09),
    "adobe".casefold(): (0xbd, 0x6c, 0x48),
    "algae green".casefold(): (0x21, 0xc3, 0x6f),
    "algae".casefold(): (0x54, 0xac, 0x68),
    "almost black".casefold(): (0x07, 0x0d, 0x0d),
    "amber".casefold(): (0xfe, 0xb3, 0x08),
    "amethyst".casefold(): (0x9b, 0x5f, 0xc0),
    "apple green".casefold(): (0x76, 0xcd, 0x26),
    "apple".casefold(): (0x6e, 0xcb, 0x3c),
    "apricot".casefold(): (0xff, 0xb1, 0x6d),
    "aqua blue".casefold(): (0x02, 0xd8, 0xe9),
    "aqua green".casefold(): (0x12, 0xe1, 0x93),
    "aqua marine".casefold(): (0x2e, 0xe8, 0xbb),
    "aqua".casefold(): (0x13, 0xea, 0xc9),
    "aquamarine".casefold(): (0x04, 0xd8, 0xb2),
    "army green".casefold(): (0x4b, 0x5d, 0x16),
    "asparagus".casefold(): (0x77, 0xab, 0x56),
    "aubergine".casefold(): (0x3d, 0x07, 0x34),
    "auburn".casefold(): (0x9a, 0x30, 0x01),
    "avocado green".casefold(): (0x87, 0xa9, 0x22),
    "avocado".casefold(): (0x90, 0xb1, 0x34),
    "azul".casefold(): (0x1d, 0x5d, 0xec),
    "azure".casefold(): (0x06, 0x9a, 0xf3),
    "baby blue".casefold(): (0xa2, 0xcf, 0xfe),
    "baby green".casefold(): (0x8c, 0xff, 0x9e),
    "baby pink".casefold(): (0xff, 0xb7, 0xce),
    "baby poo".casefold(): (0xab, 0x90, 0x04),
    "baby poop green".casefold(): (0x8f, 0x98, 0x05),
    "baby poop".casefold(): (0x93, 0x7c, 0x00),
    "baby puke green".casefold(): (0xb6, 0xc4, 0x06),
    "baby purple".casefold(): (0xca, 0x9b, 0xf7),
    "baby shit brown".casefold(): (0xad, 0x90, 0x0d),
    "baby shit green".casefold(): (0x88, 0x97, 0x17),
    "banana yellow".casefold(): (0xfa, 0xfe, 0x4b),
    "banana".casefold(): (0xff, 0xff, 0x7e),
    "barbie pink".casefold(): (0xfe, 0x46, 0xa5),
    "barf green".casefold(): (0x94, 0xac, 0x02),
    "barney purple".casefold(): (0xa0, 0x04, 0x98),
    "barney".casefold(): (0xac, 0x1d, 0xb8),
    "battleship grey".casefold(): (0x6b, 0x7c, 0x85),
    "beige".casefold(): (0xe6, 0xda, 0xa6),
    "berry".casefold(): (0x99, 0x0f, 0x4b),
    "bile".casefold(): (0xb5, 0xc3, 0x06),
    "black".casefold(): (0x00, 0x00, 0x00),
    "bland".casefold(): (0xaf, 0xa8, 0x8b),
    "blood orange".casefold(): (0xfe, 0x4b, 0x03),
    "blood red".casefold(): (0x98, 0x00, 0x02),
    "blood".casefold(): (0x77, 0x00, 0x01),
    "blue blue".casefold(): (0x22, 0x42, 0xc7),
    "blue green".casefold(): (0x13, 0x7e, 0x6d),
    "blue grey".casefold(): (0x60, 0x7c, 0x8e),
    "blue purple".casefold(): (0x57, 0x29, 0xce),
    "blue violet".casefold(): (0x5d, 0x06, 0xe9),
    "blue with a hint of purple".casefold(): (0x53, 0x3c, 0xc6),
    "blue".casefold(): (0x03, 0x43, 0xdf),
    "blue/green".casefold(): (0x0f, 0x9b, 0x8e),
    "blue/grey".casefold(): (0x75, 0x8d, 0xa3),
    "blue/purple".casefold(): (0x5a, 0x06, 0xef),
    "blueberry".casefold(): (0x46, 0x41, 0x96),
    "bluegreen".casefold(): (0x01, 0x7a, 0x79),
    "bluegrey".casefold(): (0x85, 0xa3, 0xb2),
    "bluey green".casefold(): (0x2b, 0xb1, 0x79),
    "bluey grey".casefold(): (0x89, 0xa0, 0xb0),
    "bluey purple".casefold(): (0x62, 0x41, 0xc7),
    "bluish green".casefold(): (0x10, 0xa6, 0x74),
    "bluish grey".casefold(): (0x74, 0x8b, 0x97),
    "bluish purple".casefold(): (0x70, 0x3b, 0xe7),
    "bluish".casefold(): (0x29, 0x76, 0xbb),
    "blurple".casefold(): (0x55, 0x39, 0xcc),
    "blush pink".casefold(): (0xfe, 0x82, 0x8c),
    "blush".casefold(): (0xf2, 0x9e, 0x8e),
    "booger green".casefold(): (0x96, 0xb4, 0x03),
    "booger".casefold(): (0x9b, 0xb5, 0x3c),
    "bordeaux".casefold(): (0x7b, 0x00, 0x2c),
    "boring green".casefold(): (0x63, 0xb3, 0x65),
    "bottle green".casefold(): (0x04, 0x4a, 0x05),
    "brick orange".casefold(): (0xc1, 0x4a, 0x09),
    "brick red".casefold(): (0x8f, 0x14, 0x02),
    "brick".casefold(): (0xa0, 0x36, 0x23),
    "bright aqua".casefold(): (0x0b, 0xf9, 0xea),
    "bright blue".casefold(): (0x01, 0x65, 0xfc),
    "bright cyan".casefold(): (0x41, 0xfd, 0xfe),
    "bright green".casefold(): (0x01, 0xff, 0x07),
    "bright lavender".casefold(): (0xc7, 0x60, 0xff),
    "bright light blue".casefold(): (0x26, 0xf7, 0xfd),
    "bright light green".casefold(): (0x2d, 0xfe, 0x54),
    "bright lilac".casefold(): (0xc9, 0x5e, 0xfb),
    "bright lime green".casefold(): (0x65, 0xfe, 0x08),
    "bright lime".casefold(): (0x87, 0xfd, 0x05),
    "bright magenta".casefold(): (0xff, 0x08, 0xe8),
    "bright olive".casefold(): (0x9c, 0xbb, 0x04),
    "bright orange".casefold(): (0xff, 0x5b, 0x00),
    "bright pink".casefold(): (0xfe, 0x01, 0xb1),
    "bright purple".casefold(): (0xbe, 0x03, 0xfd),
    "bright red".casefold(): (0xff, 0x00, 0x0d),
    "bright sea green".casefold(): (0x05, 0xff, 0xa6),
    "bright sky blue".casefold(): (0x02, 0xcc, 0xfe),
    "bright teal".casefold(): (0x01, 0xf9, 0xc6),
    "bright turquoise".casefold(): (0x0f, 0xfe, 0xf9),
    "bright violet".casefold(): (0xad, 0x0a, 0xfd),
    "bright yellow green".casefold(): (0x9d, 0xff, 0x00),
    "bright yellow".casefold(): (0xff, 0xfd, 0x01),
    "british racing green".casefold(): (0x05, 0x48, 0x0d),
    "bronze".casefold(): (0xa8, 0x79, 0x00),
    "brown green".casefold(): (0x70, 0x6c, 0x11),
    "brown grey".casefold(): (0x8d, 0x84, 0x68),
    "brown orange".casefold(): (0xb9, 0x69, 0x02),
    "brown red".casefold(): (0x92, 0x2b, 0x05),
    "brown yellow".casefold(): (0xb2, 0x97, 0x05),
    "brown".casefold(): (0x65, 0x37, 0x00),
    "brownish green".casefold(): (0x6a, 0x6e, 0x09),
    "brownish grey".casefold(): (0x86, 0x77, 0x5f),
    "brownish orange".casefold(): (0xcb, 0x77, 0x23),
    "brownish pink".casefold(): (0xc2, 0x7e, 0x79),
    "brownish purple".casefold(): (0x76, 0x42, 0x4e),
    "brownish red".casefold(): (0x9e, 0x36, 0x23),
    "brownish yellow".casefold(): (0xc9, 0xb0, 0x03),
    "brownish".casefold(): (0x9c, 0x6d, 0x57),
    "browny green".casefold(): (0x6f, 0x6c, 0x0a),
    "browny orange".casefold(): (0xca, 0x6b, 0x02),
    "bruise".casefold(): (0x7e, 0x40, 0x71),
    "bubble gum pink".casefold(): (0xff, 0x69, 0xaf),
    "bubblegum pink".casefold(): (0xfe, 0x83, 0xcc),
    "bubblegum".casefold(): (0xff, 0x6c, 0xb5),
    "buff".casefold(): (0xfe, 0xf6, 0x9e),
    "burgundy".casefold(): (0x61, 0x00, 0x23),
    "burnt orange".casefold(): (0xc0, 0x4e, 0x01),
    "burnt red".casefold(): (0x9f, 0x23, 0x05),
    "burnt siena".casefold(): (0xb7, 0x52, 0x03),
    "burnt sienna".casefold(): (0xb0, 0x4e, 0x0f),
    "burnt umber".casefold(): (0xa0, 0x45, 0x0e),
    "burnt yellow".casefold(): (0xd5, 0xab, 0x09),
    "burple".casefold(): (0x68, 0x32, 0xe3),
    "butter yellow".casefold(): (0xff, 0xfd, 0x74),
    "butter".casefold(): (0xff, 0xff, 0x81),
    "butterscotch".casefold(): (0xfd, 0xb1, 0x47),
    "cadet blue".casefold(): (0x4e, 0x74, 0x96),
    "camel".casefold(): (0xc6, 0x9f, 0x59),
    "camo green".casefold(): (0x52, 0x65, 0x25),
    "camo".casefold(): (0x7f, 0x8f, 0x4e),
    "camouflage green".casefold(): (0x4b, 0x61, 0x13),
    "canary yellow".casefold(): (0xff, 0xfe, 0x40),
    "canary".casefold(): (0xfd, 0xff, 0x63),
    "candy pink".casefold(): (0xff, 0x63, 0xe9),
    "caramel".casefold(): (0xaf, 0x6f, 0x09),
    "carmine".casefold(): (0x9d, 0x02, 0x16),
    "carnation pink".casefold(): (0xff, 0x7f, 0xa7),
    "carnation".casefold(): (0xfd, 0x79, 0x8f),
    "carolina blue".casefold(): (0x8a, 0xb8, 0xfe),
    "celadon".casefold(): (0xbe, 0xfd, 0xb7),
    "celery".casefold(): (0xc1, 0xfd, 0x95),
    "cement".casefold(): (0xa5, 0xa3, 0x91),
    "cerise".casefold(): (0xde, 0x0c, 0x62),
    "cerulean blue".casefold(): (0x05, 0x6e, 0xee),
    "cerulean".casefold(): (0x04, 0x85, 0xd1),
    "charcoal grey".casefold(): (0x3c, 0x41, 0x42),
    "charcoal".casefold(): (0x34, 0x38, 0x37),
    "chartreuse".casefold(): (0xc1, 0xf8, 0x0a),
    "cherry red".casefold(): (0xf7, 0x02, 0x2a),
    "cherry".casefold(): (0xcf, 0x02, 0x34),
    "chestnut".casefold(): (0x74, 0x28, 0x02),
    "chocolate brown".casefold(): (0x41, 0x19, 0x00),
    "chocolate".casefold(): (0x3d, 0x1c, 0x02),
    "cinnamon".casefold(): (0xac, 0x4f, 0x06),
    "claret".casefold(): (0x68, 0x00, 0x18),
    "clay brown".casefold(): (0xb2, 0x71, 0x3d),
    "clay".casefold(): (0xb6, 0x6a, 0x50),
    "clear blue".casefold(): (0x24, 0x7a, 0xfd),
    "cloudy blue".casefold(): (0xac, 0xc2, 0xd9),
    "cobalt blue".casefold(): (0x03, 0x0a, 0xa7),
    "cobalt".casefold(): (0x1e, 0x48, 0x8f),
    "cocoa".casefold(): (0x87, 0x5f, 0x42),
    "coffee".casefold(): (0xa6, 0x81, 0x4c),
    "cool blue".casefold(): (0x49, 0x84, 0xb8),
    "cool green".casefold(): (0x33, 0xb8, 0x64),
    "cool grey".casefold(): (0x95, 0xa3, 0xa6),
    "copper".casefold(): (0xb6, 0x63, 0x25),
    "coral pink".casefold(): (0xff, 0x61, 0x63),
    "coral".casefold(): (0xfc, 0x5a, 0x50),
    "cornflower blue".casefold(): (0x51, 0x70, 0xd7),
    "cornflower".casefold(): (0x6a, 0x79, 0xf7),
    "cranberry".casefold(): (0x9e, 0x00, 0x3a),
    "cream".casefold(): (0xff, 0xff, 0xc2),
    "creme".casefold(): (0xff, 0xff, 0xb6),
    "crimson".casefold(): (0x8c, 0x00, 0x0f),
    "custard".casefold(): (0xff, 0xfd, 0x78),
    "cyan".casefold(): (0x00, 0xff, 0xff),
    "dandelion".casefold(): (0xfe, 0xdf, 0x08),
    "dark aqua".casefold(): (0x05, 0x69, 0x6b),
    "dark aquamarine".casefold(): (0x01, 0x73, 0x71),
    "dark beige".casefold(): (0xac, 0x93, 0x62),
    "dark blue green".casefold(): (0x00, 0x52, 0x49),
    "dark blue grey".casefold(): (0x1f, 0x3b, 0x4d),
    "dark blue".casefold(): (0x00, 0x03, 0x5b),
    "dark brown".casefold(): (0x34, 0x1c, 0x02),
    "dark coral".casefold(): (0xcf, 0x52, 0x4e),
    "dark cream".casefold(): (0xff, 0xf3, 0x9a),
    "dark cyan".casefold(): (0x0a, 0x88, 0x8a),
    "dark forest green".casefold(): (0x00, 0x2d, 0x04),
    "dark fuchsia".casefold(): (0x9d, 0x07, 0x59),
    "dark gold".casefold(): (0xb5, 0x94, 0x10),
    "dark grass green".casefold(): (0x38, 0x80, 0x04),
    "dark green blue".casefold(): (0x1f, 0x63, 0x57),
    "dark green".casefold(): (0x03, 0x35, 0x00),
    "dark grey blue".casefold(): (0x29, 0x46, 0x5b),
    "dark grey".casefold(): (0x36, 0x37, 0x37),
    "dark hot pink".casefold(): (0xd9, 0x01, 0x66),
    "dark indigo".casefold(): (0x1f, 0x09, 0x54),
    "dark khaki".casefold(): (0x9b, 0x8f, 0x55),
    "dark lavender".casefold(): (0x85, 0x67, 0x98),
    "dark lilac".casefold(): (0x9c, 0x6d, 0xa5),
    "dark lime green".casefold(): (0x7e, 0xbd, 0x01),
    "dark lime".casefold(): (0x84, 0xb7, 0x01),
    "dark magenta".casefold(): (0x96, 0x00, 0x56),
    "dark maroon".casefold(): (0x3c, 0x00, 0x08),
    "dark mauve".casefold(): (0x87, 0x4c, 0x62),
    "dark mint green".casefold(): (0x20, 0xc0, 0x73),
    "dark mint".casefold(): (0x48, 0xc0, 0x72),
    "dark mustard".casefold(): (0xa8, 0x89, 0x05),
    "dark navy blue".casefold(): (0x00, 0x02, 0x2e),
    "dark navy".casefold(): (0x00, 0x04, 0x35),
    "dark olive green".casefold(): (0x3c, 0x4d, 0x03),
    "dark olive".casefold(): (0x37, 0x3e, 0x02),
    "dark orange".casefold(): (0xc6, 0x51, 0x02),
    "dark pastel green".casefold(): (0x56, 0xae, 0x57),
    "dark peach".casefold(): (0xde, 0x7e, 0x5d),
    "dark periwinkle".casefold(): (0x66, 0x5f, 0xd1),
    "dark pink".casefold(): (0xcb, 0x41, 0x6b),
    "dark plum".casefold(): (0x3f, 0x01, 0x2c),
    "dark purple".casefold(): (0x35, 0x06, 0x3e),
    "dark red".casefold(): (0x84, 0x00, 0x00),
    "dark rose".casefold(): (0xb5, 0x48, 0x5d),
    "dark royal blue".casefold(): (0x02, 0x06, 0x6f),
    "dark sage".casefold(): (0x59, 0x85, 0x56),
    "dark salmon".casefold(): (0xc8, 0x5a, 0x53),
    "dark sand".casefold(): (0xa8, 0x8f, 0x59),
    "dark sea green".casefold(): (0x11, 0x87, 0x5d),
    "dark seafoam green".casefold(): (0x3e, 0xaf, 0x76),
    "dark seafoam".casefold(): (0x1f, 0xb5, 0x7a),
    "dark sky blue".casefold(): (0x44, 0x8e, 0xe4),
    "dark slate blue".casefold(): (0x21, 0x47, 0x61),
    "dark tan".casefold(): (0xaf, 0x88, 0x4a),
    "dark taupe".casefold(): (0x7f, 0x68, 0x4e),
    "dark teal".casefold(): (0x01, 0x4d, 0x4e),
    "dark turquoise".casefold(): (0x04, 0x5c, 0x5a),
    "dark violet".casefold(): (0x34, 0x01, 0x3f),
    "dark yellow green".casefold(): (0x72, 0x8f, 0x02),
    "dark yellow".casefold(): (0xd5, 0xb6, 0x0a),
    "dark".casefold(): (0x1b, 0x24, 0x31),
    "darkblue".casefold(): (0x03, 0x07, 0x64),
    "darkgreen".casefold(): (0x05, 0x49, 0x07),
    "darkish blue".casefold(): (0x01, 0x41, 0x82),
    "darkish green".casefold(): (0x28, 0x7c, 0x37),
    "darkish pink".casefold(): (0xda, 0x46, 0x7d),
    "darkish purple".casefold(): (0x75, 0x19, 0x73),
    "darkish red".casefold(): (0xa9, 0x03, 0x08),
    "deep aqua".casefold(): (0x08, 0x78, 0x7f),
    "deep blue".casefold(): (0x04, 0x02, 0x73),
    "deep brown".casefold(): (0x41, 0x02, 0x00),
    "deep green".casefold(): (0x02, 0x59, 0x0f),
    "deep lavender".casefold(): (0x8d, 0x5e, 0xb7),
    "deep lilac".casefold(): (0x96, 0x6e, 0xbd),
    "deep magenta".casefold(): (0xa0, 0x02, 0x5c),
    "deep orange".casefold(): (0xdc, 0x4d, 0x01),
    "deep pink".casefold(): (0xcb, 0x01, 0x62),
    "deep purple".casefold(): (0x36, 0x01, 0x3f),
    "deep red".casefold(): (0x9a, 0x02, 0x00),
    "deep rose".casefold(): (0xc7, 0x47, 0x67),
    "deep sea blue".casefold(): (0x01, 0x54, 0x82),
    "deep sky blue".casefold(): (0x0d, 0x75, 0xf8),
    "deep teal".casefold(): (0x00, 0x55, 0x5a),
    "deep turquoise".casefold(): (0x01, 0x73, 0x74),
    "deep violet".casefold(): (0x49, 0x06, 0x48),
    "denim blue".casefold(): (0x3b, 0x5b, 0x92),
    "denim".casefold(): (0x3b, 0x63, 0x8c),
    "desert".casefold(): (0xcc, 0xad, 0x60),
    "diarrhea".casefold(): (0x9f, 0x83, 0x03),
    "dirt brown".casefold(): (0x83, 0x65, 0x39),
    "dirt".casefold(): (0x8a, 0x6e, 0x45),
    "dirty blue".casefold(): (0x3f, 0x82, 0x9d),
    "dirty green".casefold(): (0x66, 0x7e, 0x2c),
    "dirty orange".casefold(): (0xc8, 0x76, 0x06),
    "dirty pink".casefold(): (0xca, 0x7b, 0x80),
    "dirty purple".casefold(): (0x73, 0x4a, 0x65),
    "dirty yellow".casefold(): (0xcd, 0xc5, 0x0a),
    "dodger blue".casefold(): (0x3e, 0x82, 0xfc),
    "drab green".casefold(): (0x74, 0x95, 0x51),
    "drab".casefold(): (0x82, 0x83, 0x44),
    "dried blood".casefold(): (0x4b, 0x01, 0x01),
    "duck egg blue".casefold(): (0xc3, 0xfb, 0xf4),
    "dull blue".casefold(): (0x49, 0x75, 0x9c),
    "dull brown".casefold(): (0x87, 0x6e, 0x4b),
    "dull green".casefold(): (0x74, 0xa6, 0x62),
    "dull orange".casefold(): (0xd8, 0x86, 0x3b),
    "dull pink".casefold(): (0xd5, 0x86, 0x9d),
    "dull purple".casefold(): (0x84, 0x59, 0x7e),
    "dull red".casefold(): (0xbb, 0x3f, 0x3f),
    "dull teal".casefold(): (0x5f, 0x9e, 0x8f),
    "dull yellow".casefold(): (0xee, 0xdc, 0x5b),
    "dusk blue".casefold(): (0x26, 0x53, 0x8d),
    "dusk".casefold(): (0x4e, 0x54, 0x81),
    "dusky blue".casefold(): (0x47, 0x5f, 0x94),
    "dusky pink".casefold(): (0xcc, 0x7a, 0x8b),
    "dusky purple".casefold(): (0x89, 0x5b, 0x7b),
    "dusky rose".casefold(): (0xba, 0x68, 0x73),
    "dust".casefold(): (0xb2, 0x99, 0x6e),
    "dusty blue".casefold(): (0x5a, 0x86, 0xad),
    "dusty green".casefold(): (0x76, 0xa9, 0x73),
    "dusty lavender".casefold(): (0xac, 0x86, 0xa8),
    "dusty orange".casefold(): (0xf0, 0x83, 0x3a),
    "dusty pink".casefold(): (0xd5, 0x8a, 0x94),
    "dusty purple".casefold(): (0x82, 0x5f, 0x87),
    "dusty red".casefold(): (0xb9, 0x48, 0x4e),
    "dusty rose".casefold(): (0xc0, 0x73, 0x7a),
    "dusty teal".casefold(): (0x4c, 0x90, 0x85),
    "earth".casefold(): (0xa2, 0x65, 0x3e),
    "easter green".casefold(): (0x8c, 0xfd, 0x7e),
    "easter purple".casefold(): (0xc0, 0x71, 0xfe),
    "ecru".casefold(): (0xfe, 0xff, 0xca),
    "egg shell".casefold(): (0xff, 0xfc, 0xc4),
    "eggplant purple".casefold(): (0x43, 0x05, 0x41),
    "eggplant".casefold(): (0x38, 0x08, 0x35),
    "eggshell blue".casefold(): (0xc4, 0xff, 0xf7),
    "eggshell".casefold(): (0xff, 0xff, 0xd4),
    "electric blue".casefold(): (0x06, 0x52, 0xff),
    "electric green".casefold(): (0x21, 0xfc, 0x0d),
    "electric lime".casefold(): (0xa8, 0xff, 0x04),
    "electric pink".casefold(): (0xff, 0x04, 0x90),
    "electric purple".casefold(): (0xaa, 0x23, 0xff),
    "emerald green".casefold(): (0x02, 0x8f, 0x1e),
    "emerald".casefold(): (0x01, 0xa0, 0x49),
    "evergreen".casefold(): (0x05, 0x47, 0x2a),
    "faded blue".casefold(): (0x65, 0x8c, 0xbb),
    "faded green".casefold(): (0x7b, 0xb2, 0x74),
    "faded orange".casefold(): (0xf0, 0x94, 0x4d),
    "faded pink".casefold(): (0xde, 0x9d, 0xac),
    "faded purple".casefold(): (0x91, 0x6e, 0x99),
    "faded red".casefold(): (0xd3, 0x49, 0x4e),
    "faded yellow".casefold(): (0xfe, 0xff, 0x7f),
    "fawn".casefold(): (0xcf, 0xaf, 0x7b),
    "fern green".casefold(): (0x54, 0x8d, 0x44),
    "fern".casefold(): (0x63, 0xa9, 0x50),
    "fire engine red".casefold(): (0xfe, 0x00, 0x02),
    "flat blue".casefold(): (0x3c, 0x73, 0xa8),
    "flat green".casefold(): (0x69, 0x9d, 0x4c),
    "fluorescent green".casefold(): (0x08, 0xff, 0x08),
    "fluro green".casefold(): (0x0a, 0xff, 0x02),
    "foam green".casefold(): (0x90, 0xfd, 0xa9),
    "forest green".casefold(): (0x06, 0x47, 0x0c),
    "forest".casefold(): (0x0b, 0x55, 0x09),
    "forrest green".casefold(): (0x15, 0x44, 0x06),
    "french blue".casefold(): (0x43, 0x6b, 0xad),
    "fresh green".casefold(): (0x69, 0xd8, 0x4f),
    "frog green".casefold(): (0x58, 0xbc, 0x08),
    "fuchsia".casefold(): (0xed, 0x0d, 0xd9),
    "gold".casefold(): (0xdb, 0xb4, 0x0c),
    "golden brown".casefold(): (0xb2, 0x7a, 0x01),
    "golden rod".casefold(): (0xf9, 0xbc, 0x08),
    "golden yellow".casefold(): (0xfe, 0xc6, 0x15),
    "golden".casefold(): (0xf5, 0xbf, 0x03),
    "goldenrod".casefold(): (0xfa, 0xc2, 0x05),
    "grape purple".casefold(): (0x5d, 0x14, 0x51),
    "grape".casefold(): (0x6c, 0x34, 0x61),
    "grapefruit".casefold(): (0xfd, 0x59, 0x56),
    "grass green".casefold(): (0x3f, 0x9b, 0x0b),
    "grass".casefold(): (0x5c, 0xac, 0x2d),
    "grassy green".casefold(): (0x41, 0x9c, 0x03),
    "green apple".casefold(): (0x5e, 0xdc, 0x1f),
    "green blue".casefold(): (0x06, 0xb4, 0x8b),
    "green brown".casefold(): (0x54, 0x4e, 0x03),
    "green grey".casefold(): (0x77, 0x92, 0x6f),
    "green teal".casefold(): (0x0c, 0xb5, 0x77),
    "green yellow".casefold(): (0xc9, 0xff, 0x27),
    "green".casefold(): (0x15, 0xb0, 0x1a),
    "green/blue".casefold(): (0x01, 0xc0, 0x8d),
    "green/yellow".casefold(): (0xb5, 0xce, 0x08),
    "greenblue".casefold(): (0x23, 0xc4, 0x8b),
    "greenish beige".casefold(): (0xc9, 0xd1, 0x79),
    "greenish blue".casefold(): (0x0b, 0x8b, 0x87),
    "greenish brown".casefold(): (0x69, 0x61, 0x12),
    "greenish cyan".casefold(): (0x2a, 0xfe, 0xb7),
    "greenish grey".casefold(): (0x96, 0xae, 0x8d),
    "greenish tan".casefold(): (0xbc, 0xcb, 0x7a),
    "greenish teal".casefold(): (0x32, 0xbf, 0x84),
    "greenish turquoise".casefold(): (0x00, 0xfb, 0xb0),
    "greenish yellow".casefold(): (0xcd, 0xfd, 0x02),
    "greenish".casefold(): (0x40, 0xa3, 0x68),
    "greeny blue".casefold(): (0x42, 0xb3, 0x95),
    "greeny brown".casefold(): (0x69, 0x60, 0x06),
    "greeny grey".casefold(): (0x7e, 0xa0, 0x7a),
    "greeny yellow".casefold(): (0xc6, 0xf8, 0x08),
    "grey blue".casefold(): (0x6b, 0x8b, 0xa4),
    "grey brown".casefold(): (0x7f, 0x70, 0x53),
    "grey green".casefold(): (0x78, 0x9b, 0x73),
    "grey pink".casefold(): (0xc3, 0x90, 0x9b),
    "grey purple".casefold(): (0x82, 0x6d, 0x8c),
    "grey teal".casefold(): (0x5e, 0x9b, 0x8a),
    "grey".casefold(): (0x92, 0x95, 0x91),
    "grey/blue".casefold(): (0x64, 0x7d, 0x8e),
    "grey/green".casefold(): (0x86, 0xa1, 0x7d),
    "greyblue".casefold(): (0x77, 0xa1, 0xb5),
    "greyish blue".casefold(): (0x5e, 0x81, 0x9d),
    "greyish brown".casefold(): (0x7a, 0x6a, 0x4f),
    "greyish green".casefold(): (0x82, 0xa6, 0x7d),
    "greyish pink".casefold(): (0xc8, 0x8d, 0x94),
    "greyish purple".casefold(): (0x88, 0x71, 0x91),
    "greyish teal".casefold(): (0x71, 0x9f, 0x91),
    "greyish".casefold(): (0xa8, 0xa4, 0x95),
    "gross green".casefold(): (0xa0, 0xbf, 0x16),
    "gunmetal".casefold(): (0x53, 0x62, 0x67),
    "hazel".casefold(): (0x8e, 0x76, 0x18),
    "heather".casefold(): (0xa4, 0x84, 0xac),
    "heliotrope".casefold(): (0xd9, 0x4f, 0xf5),
    "highlighter green".casefold(): (0x1b, 0xfc, 0x06),
    "hospital green".casefold(): (0x9b, 0xe5, 0xaa),
    "hot green".casefold(): (0x25, 0xff, 0x29),
    "hot magenta".casefold(): (0xf5, 0x04, 0xc9),
    "hot pink".casefold(): (0xff, 0x02, 0x8d),
    "hot purple".casefold(): (0xcb, 0x00, 0xf5),
    "hunter green".casefold(): (0x0b, 0x40, 0x08),
    "ice blue".casefold(): (0xd7, 0xff, 0xfe),
    "ice".casefold(): (0xd6, 0xff, 0xfa),
    "icky green".casefold(): (0x8f, 0xae, 0x22),
    "indian red".casefold(): (0x85, 0x0e, 0x04),
    "indigo blue".casefold(): (0x3a, 0x18, 0xb1),
    "indigo".casefold(): (0x38, 0x02, 0x82),
    "iris".casefold(): (0x62, 0x58, 0xc4),
    "irish green".casefold(): (0x01, 0x95, 0x29),
    "ivory".casefold(): (0xff, 0xff, 0xcb),
    "jade green".casefold(): (0x2b, 0xaf, 0x6a),
    "jade".casefold(): (0x1f, 0xa7, 0x74),
    "jungle green".casefold(): (0x04, 0x82, 0x43),
    "kelley green".casefold(): (0x00, 0x93, 0x37),
    "kelly green".casefold(): (0x02, 0xab, 0x2e),
    "kermit green".casefold(): (0x5c, 0xb2, 0x00),
    "key lime".casefold(): (0xae, 0xff, 0x6e),
    "khaki green".casefold(): (0x72, 0x86, 0x39),
    "khaki".casefold(): (0xaa, 0xa6, 0x62),
    "kiwi green".casefold(): (0x8e, 0xe5, 0x3f),
    "kiwi".casefold(): (0x9c, 0xef, 0x43),
    "lavender blue".casefold(): (0x8b, 0x88, 0xf8),
    "lavender pink".casefold(): (0xdd, 0x85, 0xd7),
    "lavender".casefold(): (0xc7, 0x9f, 0xef),
    "lawn green".casefold(): (0x4d, 0xa4, 0x09),
    "leaf green".casefold(): (0x5c, 0xa9, 0x04),
    "leaf".casefold(): (0x71, 0xaa, 0x34),
    "leafy green".casefold(): (0x51, 0xb7, 0x3b),
    "leather".casefold(): (0xac, 0x74, 0x34),
    "lemon green".casefold(): (0xad, 0xf8, 0x02),
    "lemon lime".casefold(): (0xbf, 0xfe, 0x28),
    "lemon yellow".casefold(): (0xfd, 0xff, 0x38),
    "lemon".casefold(): (0xfd, 0xff, 0x52),
    "lichen".casefold(): (0x8f, 0xb6, 0x7b),
    "light aqua".casefold(): (0x8c, 0xff, 0xdb),
    "light aquamarine".casefold(): (0x7b, 0xfd, 0xc7),
    "light beige".casefold(): (0xff, 0xfe, 0xb6),
    "light blue green".casefold(): (0x7e, 0xfb, 0xb3),
    "light blue grey".casefold(): (0xb7, 0xc9, 0xe2),
    "light blue".casefold(): (0x95, 0xd0, 0xfc),
    "light bluish green".casefold(): (0x76, 0xfd, 0xa8),
    "light bright green".casefold(): (0x53, 0xfe, 0x5c),
    "light brown".casefold(): (0xad, 0x81, 0x50),
    "light burgundy".casefold(): (0xa8, 0x41, 0x5b),
    "light cyan".casefold(): (0xac, 0xff, 0xfc),
    "light eggplant".casefold(): (0x89, 0x45, 0x85),
    "light forest green".casefold(): (0x4f, 0x91, 0x53),
    "light gold".casefold(): (0xfd, 0xdc, 0x5c),
    "light grass green".casefold(): (0x9a, 0xf7, 0x64),
    "light green blue".casefold(): (0x56, 0xfc, 0xa2),
    "light green".casefold(): (0x96, 0xf9, 0x7b),
    "light greenish blue".casefold(): (0x63, 0xf7, 0xb4),
    "light grey blue".casefold(): (0x9d, 0xbc, 0xd4),
    "light grey green".casefold(): (0xb7, 0xe1, 0xa1),
    "light grey".casefold(): (0xd8, 0xdc, 0xd6),
    "light indigo".casefold(): (0x6d, 0x5a, 0xcf),
    "light khaki".casefold(): (0xe6, 0xf2, 0xa2),
    "light lavendar".casefold(): (0xef, 0xc0, 0xfe),
    "light lavender".casefold(): (0xdf, 0xc5, 0xfe),
    "light light blue".casefold(): (0xca, 0xff, 0xfb),
    "light light green".casefold(): (0xc8, 0xff, 0xb0),
    "light lilac".casefold(): (0xed, 0xc8, 0xff),
    "light lime green".casefold(): (0xb9, 0xff, 0x66),
    "light lime".casefold(): (0xae, 0xfd, 0x6c),
    "light magenta".casefold(): (0xfa, 0x5f, 0xf7),
    "light maroon".casefold(): (0xa2, 0x48, 0x57),
    "light mauve".casefold(): (0xc2, 0x92, 0xa1),
    "light mint green".casefold(): (0xa6, 0xfb, 0xb2),
    "light mint".casefold(): (0xb6, 0xff, 0xbb),
    "light moss green".casefold(): (0xa6, 0xc8, 0x75),
    "light mustard".casefold(): (0xf7, 0xd5, 0x60),
    "light navy blue".casefold(): (0x2e, 0x5a, 0x88),
    "light navy".casefold(): (0x15, 0x50, 0x84),
    "light neon green".casefold(): (0x4e, 0xfd, 0x54),
    "light olive green".casefold(): (0xa4, 0xbe, 0x5c),
    "light olive".casefold(): (0xac, 0xbf, 0x69),
    "light orange".casefold(): (0xfd, 0xaa, 0x48),
    "light pastel green".casefold(): (0xb2, 0xfb, 0xa5),
    "light pea green".casefold(): (0xc4, 0xfe, 0x82),
    "light peach".casefold(): (0xff, 0xd8, 0xb1),
    "light periwinkle".casefold(): (0xc1, 0xc6, 0xfc),
    "light pink".casefold(): (0xff, 0xd1, 0xdf),
    "light plum".casefold(): (0x9d, 0x57, 0x83),
    "light purple".casefold(): (0xbf, 0x77, 0xf6),
    "light red".casefold(): (0xff, 0x47, 0x4c),
    "light rose".casefold(): (0xff, 0xc5, 0xcb),
    "light royal blue".casefold(): (0x3a, 0x2e, 0xfe),
    "light sage".casefold(): (0xbc, 0xec, 0xac),
    "light salmon".casefold(): (0xfe, 0xa9, 0x93),
    "light sea green".casefold(): (0x98, 0xf6, 0xb0),
    "light seafoam green".casefold(): (0xa7, 0xff, 0xb5),
    "light seafoam".casefold(): (0xa0, 0xfe, 0xbf),
    "light sky blue".casefold(): (0xc6, 0xfc, 0xff),
    "light tan".casefold(): (0xfb, 0xee, 0xac),
    "light teal".casefold(): (0x90, 0xe4, 0xc1),
    "light turquoise".casefold(): (0x7e, 0xf4, 0xcc),
    "light urple".casefold(): (0xb3, 0x6f, 0xf6),
    "light violet".casefold(): (0xd6, 0xb4, 0xfc),
    "light yellow green".casefold(): (0xcc, 0xfd, 0x7f),
    "light yellow".casefold(): (0xff, 0xfe, 0x7a),
    "light yellowish green".casefold(): (0xc2, 0xff, 0x89),
    "lightblue".casefold(): (0x7b, 0xc8, 0xf6),
    "lighter green".casefold(): (0x75, 0xfd, 0x63),
    "lighter purple".casefold(): (0xa5, 0x5a, 0xf4),
    "lightgreen".casefold(): (0x76, 0xff, 0x7b),
    "lightish blue".casefold(): (0x3d, 0x7a, 0xfd),
    "lightish green".casefold(): (0x61, 0xe1, 0x60),
    "lightish purple".casefold(): (0xa5, 0x52, 0xe6),
    "lightish red".casefold(): (0xfe, 0x2f, 0x4a),
    "lilac".casefold(): (0xce, 0xa2, 0xfd),
    "liliac".casefold(): (0xc4, 0x8e, 0xfd),
    "lime green".casefold(): (0x89, 0xfe, 0x05),
    "lime yellow".casefold(): (0xd0, 0xfe, 0x1d),
    "lime".casefold(): (0xaa, 0xff, 0x32),
    "lipstick red".casefold(): (0xc0, 0x02, 0x2f),
    "lipstick".casefold(): (0xd5, 0x17, 0x4e),
    "macaroni and cheese".casefold(): (0xef, 0xb4, 0x35),
    "magenta".casefold(): (0xc2, 0x00, 0x78),
    "mahogany".casefold(): (0x4a, 0x01, 0x00),
    "maize".casefold(): (0xf4, 0xd0, 0x54),
    "mango".casefold(): (0xff, 0xa6, 0x2b),
    "manilla".casefold(): (0xff, 0xfa, 0x86),
    "marigold".casefold(): (0xfc, 0xc0, 0x06),
    "marine blue".casefold(): (0x01, 0x38, 0x6a),
    "marine".casefold(): (0x04, 0x2e, 0x60),
    "maroon".casefold(): (0x65, 0x00, 0x21),
    "mauve".casefold(): (0xae, 0x71, 0x81),
    "medium blue".casefold(): (0x2c, 0x6f, 0xbb),
    "medium brown".casefold(): (0x7f, 0x51, 0x12),
    "medium green".casefold(): (0x39, 0xad, 0x48),
    "medium grey".casefold(): (0x7d, 0x7f, 0x7c),
    "medium pink".casefold(): (0xf3, 0x61, 0x96),
    "medium purple".casefold(): (0x9e, 0x43, 0xa2),
    "melon".casefold(): (0xff, 0x78, 0x55),
    "merlot".casefold(): (0x73, 0x00, 0x39),
    "metallic blue".casefold(): (0x4f, 0x73, 0x8e),
    "mid blue".casefold(): (0x27, 0x6a, 0xb3),
    "mid green".casefold(): (0x50, 0xa7, 0x47),
    "midnight blue".casefold(): (0x02, 0x00, 0x35),
    "midnight purple".casefold(): (0x28, 0x01, 0x37),
    "midnight".casefold(): (0x03, 0x01, 0x2d),
    "military green".casefold(): (0x66, 0x7c, 0x3e),
    "milk chocolate".casefold(): (0x7f, 0x4e, 0x1e),
    "mint green".casefold(): (0x8f, 0xff, 0x9f),
    "mint".casefold(): (0x9f, 0xfe, 0xb0),
    "minty green".casefold(): (0x0b, 0xf7, 0x7d),
    "mocha".casefold(): (0x9d, 0x76, 0x51),
    "moss green".casefold(): (0x65, 0x8b, 0x38),
    "moss".casefold(): (0x76, 0x99, 0x58),
    "mossy green".casefold(): (0x63, 0x8b, 0x27),
    "mud brown".casefold(): (0x60, 0x46, 0x0f),
    "mud green".casefold(): (0x60, 0x66, 0x02),
    "mud".casefold(): (0x73, 0x5c, 0x12),
    "muddy brown".casefold(): (0x88, 0x68, 0x06),
    "muddy green".casefold(): (0x65, 0x74, 0x32),
    "muddy yellow".casefold(): (0xbf, 0xac, 0x05),
    "mulberry".casefold(): (0x92, 0x0a, 0x4e),
    "murky green".casefold(): (0x6c, 0x7a, 0x0e),
    "mushroom".casefold(): (0xba, 0x9e, 0x88),
    "mustard brown".casefold(): (0xac, 0x7e, 0x04),
    "mustard green".casefold(): (0xa8, 0xb5, 0x04),
    "mustard yellow".casefold(): (0xd2, 0xbd, 0x0a),
    "mustard".casefold(): (0xce, 0xb3, 0x01),
    "muted blue".casefold(): (0x3b, 0x71, 0x9f),
    "muted green".casefold(): (0x5f, 0xa0, 0x52),
    "muted pink".casefold(): (0xd1, 0x76, 0x8f),
    "muted purple".casefold(): (0x80, 0x5b, 0x87),
    "nasty green".casefold(): (0x70, 0xb2, 0x3f),
    "navy blue".casefold(): (0x00, 0x11, 0x46),
    "navy green".casefold(): (0x35, 0x53, 0x0a),
    "navy".casefold(): (0x01, 0x15, 0x3e),
    "neon blue".casefold(): (0x04, 0xd9, 0xff),
    "neon green".casefold(): (0x0c, 0xff, 0x0c),
    "neon pink".casefold(): (0xfe, 0x01, 0x9a),
    "neon purple".casefold(): (0xbc, 0x13, 0xfe),
    "neon red".casefold(): (0xff, 0x07, 0x3a),
    "neon yellow".casefold(): (0xcf, 0xff, 0x04),
    "nice blue".casefold(): (0x10, 0x7a, 0xb0),
    "night blue".casefold(): (0x04, 0x03, 0x48),
    "ocean blue".casefold(): (0x03, 0x71, 0x9c),
    "ocean green".casefold(): (0x3d, 0x99, 0x73),
    "ocean".casefold(): (0x01, 0x7b, 0x92),
    "ocher".casefold(): (0xbf, 0x9b, 0x0c),
    "ochre".casefold(): (0xbf, 0x90, 0x05),
    "ocre".casefold(): (0xc6, 0x9c, 0x04),
    "off blue".casefold(): (0x56, 0x84, 0xae),
    "off green".casefold(): (0x6b, 0xa3, 0x53),
    "off white".casefold(): (0xff, 0xff, 0xe4),
    "off yellow".casefold(): (0xf1, 0xf3, 0x3f),
    "old pink".casefold(): (0xc7, 0x79, 0x86),
    "old rose".casefold(): (0xc8, 0x7f, 0x89),
    "olive brown".casefold(): (0x64, 0x54, 0x03),
    "olive drab".casefold(): (0x6f, 0x76, 0x32),
    "olive green".casefold(): (0x67, 0x7a, 0x04),
    "olive yellow".casefold(): (0xc2, 0xb7, 0x09),
    "olive".casefold(): (0x6e, 0x75, 0x0e),
    "orange brown".casefold(): (0xbe, 0x64, 0x00),
    "orange pink".casefold(): (0xff, 0x6f, 0x52),
    "orange red".casefold(): (0xfd, 0x41, 0x1e),
    "orange yellow".casefold(): (0xff, 0xad, 0x01),
    "orange".casefold(): (0xf9, 0x73, 0x06),
    "orangeish".casefold(): (0xfd, 0x8d, 0x49),
    "orangered".casefold(): (0xfe, 0x42, 0x0f),
    "orangey brown".casefold(): (0xb1, 0x60, 0x02),
    "orangey red".casefold(): (0xfa, 0x42, 0x24),
    "orangey yellow".casefold(): (0xfd, 0xb9, 0x15),
    "orangish brown".casefold(): (0xb2, 0x5f, 0x03),
    "orangish red".casefold(): (0xf4, 0x36, 0x05),
    "orangish".casefold(): (0xfc, 0x82, 0x4a),
    "orchid".casefold(): (0xc8, 0x75, 0xc4),
    "pale aqua".casefold(): (0xb8, 0xff, 0xeb),
    "pale blue".casefold(): (0xd0, 0xfe, 0xfe),
    "pale brown".casefold(): (0xb1, 0x91, 0x6e),
    "pale cyan".casefold(): (0xb7, 0xff, 0xfa),
    "pale gold".casefold(): (0xfd, 0xde, 0x6c),
    "pale green".casefold(): (0xc7, 0xfd, 0xb5),
    "pale grey".casefold(): (0xfd, 0xfd, 0xfe),
    "pale lavender".casefold(): (0xee, 0xcf, 0xfe),
    "pale light green".casefold(): (0xb1, 0xfc, 0x99),
    "pale lilac".casefold(): (0xe4, 0xcb, 0xff),
    "pale lime green".casefold(): (0xb1, 0xff, 0x65),
    "pale lime".casefold(): (0xbe, 0xfd, 0x73),
    "pale magenta".casefold(): (0xd7, 0x67, 0xad),
    "pale mauve".casefold(): (0xfe, 0xd0, 0xfc),
    "pale olive green".casefold(): (0xb1, 0xd2, 0x7b),
    "pale olive".casefold(): (0xb9, 0xcc, 0x81),
    "pale orange".casefold(): (0xff, 0xa7, 0x56),
    "pale peach".casefold(): (0xff, 0xe5, 0xad),
    "pale pink".casefold(): (0xff, 0xcf, 0xdc),
    "pale purple".casefold(): (0xb7, 0x90, 0xd4),
    "pale red".casefold(): (0xd9, 0x54, 0x4d),
    "pale rose".casefold(): (0xfd, 0xc1, 0xc5),
    "pale salmon".casefold(): (0xff, 0xb1, 0x9a),
    "pale sky blue".casefold(): (0xbd, 0xf6, 0xfe),
    "pale teal".casefold(): (0x82, 0xcb, 0xb2),
    "pale turquoise".casefold(): (0xa5, 0xfb, 0xd5),
    "pale violet".casefold(): (0xce, 0xae, 0xfa),
    "pale yellow".casefold(): (0xff, 0xff, 0x84),
    "pale".casefold(): (0xff, 0xf9, 0xd0),
    "parchment".casefold(): (0xfe, 0xfc, 0xaf),
    "pastel blue".casefold(): (0xa2, 0xbf, 0xfe),
    "pastel green".casefold(): (0xb0, 0xff, 0x9d),
    "pastel orange".casefold(): (0xff, 0x96, 0x4f),
    "pastel pink".casefold(): (0xff, 0xba, 0xcd),
    "pastel purple".casefold(): (0xca, 0xa0, 0xff),
    "pastel red".casefold(): (0xdb, 0x58, 0x56),
    "pastel yellow".casefold(): (0xff, 0xfe, 0x71),
    "pea green".casefold(): (0x8e, 0xab, 0x12),
    "pea soup green".casefold(): (0x94, 0xa6, 0x17),
    "pea soup".casefold(): (0x92, 0x99, 0x01),
    "pea".casefold(): (0xa4, 0xbf, 0x20),
    "peach".casefold(): (0xff, 0xb0, 0x7c),
    "peachy pink".casefold(): (0xff, 0x9a, 0x8a),
    "peacock blue".casefold(): (0x01, 0x67, 0x95),
    "pear".casefold(): (0xcb, 0xf8, 0x5f),
    "periwinkle blue".casefold(): (0x8f, 0x99, 0xfb),
    "periwinkle".casefold(): (0x8e, 0x82, 0xfe),
    "perrywinkle".casefold(): (0x8f, 0x8c, 0xe7),
    "petrol".casefold(): (0x00, 0x5f, 0x6a),
    "pig pink".casefold(): (0xe7, 0x8e, 0xa5),
    "pine green".casefold(): (0x0a, 0x48, 0x1e),
    "pine".casefold(): (0x2b, 0x5d, 0x34),
    "pink purple".casefold(): (0xdb, 0x4b, 0xda),
    "pink red".casefold(): (0xf5, 0x05, 0x4f),
    "pink".casefold(): (0xff, 0x81, 0xc0),
    "pink/purple".casefold(): (0xef, 0x1d, 0xe7),
    "pinkish brown".casefold(): (0xb1, 0x72, 0x61),
    "pinkish grey".casefold(): (0xc8, 0xac, 0xa9),
    "pinkish orange".casefold(): (0xff, 0x72, 0x4c),
    "pinkish purple".casefold(): (0xd6, 0x48, 0xd7),
    "pinkish red".casefold(): (0xf1, 0x0c, 0x45),
    "pinkish tan".casefold(): (0xd9, 0x9b, 0x82),
    "pinkish".casefold(): (0xd4, 0x6a, 0x7e),
    "pinky purple".casefold(): (0xc9, 0x4c, 0xbe),
    "pinky red".casefold(): (0xfc, 0x26, 0x47),
    "pinky".casefold(): (0xfc, 0x86, 0xaa),
    "piss yellow".casefold(): (0xdd, 0xd6, 0x18),
    "pistachio".casefold(): (0xc0, 0xfa, 0x8b),
    "plum purple".casefold(): (0x4e, 0x05, 0x50),
    "plum".casefold(): (0x58, 0x0f, 0x41),
    "poison green".casefold(): (0x40, 0xfd, 0x14),
    "poo brown".casefold(): (0x88, 0x5f, 0x01),
    "poo".casefold(): (0x8f, 0x73, 0x03),
    "poop brown".casefold(): (0x7a, 0x59, 0x01),
    "poop green".casefold(): (0x6f, 0x7c, 0x00),
    "poop".casefold(): (0x7f, 0x5e, 0x00),
    "powder blue".casefold(): (0xb1, 0xd1, 0xfc),
    "powder pink".casefold(): (0xff, 0xb2, 0xd0),
    "primary blue".casefold(): (0x08, 0x04, 0xf9),
    "prussian blue".casefold(): (0x00, 0x45, 0x77),
    "puce".casefold(): (0xa5, 0x7e, 0x52),
    "puke brown".casefold(): (0x94, 0x77, 0x06),
    "puke green".casefold(): (0x9a, 0xae, 0x07),
    "puke yellow".casefold(): (0xc2, 0xbe, 0x0e),
    "puke".casefold(): (0xa5, 0xa5, 0x02),
    "pumpkin orange".casefold(): (0xfb, 0x7d, 0x07),
    "pumpkin".casefold(): (0xe1, 0x77, 0x01),
    "pure blue".casefold(): (0x02, 0x03, 0xe2),
    "purple blue".casefold(): (0x63, 0x2d, 0xe9),
    "purple brown".casefold(): (0x67, 0x3a, 0x3f),
    "purple grey".casefold(): (0x86, 0x6f, 0x85),
    "purple pink".casefold(): (0xe0, 0x3f, 0xd8),
    "purple red".casefold(): (0x99, 0x01, 0x47),
    "purple".casefold(): (0x7e, 0x1e, 0x9c),
    "purple/blue".casefold(): (0x5d, 0x21, 0xd0),
    "purple/pink".casefold(): (0xd7, 0x25, 0xde),
    "purpleish blue".casefold(): (0x61, 0x40, 0xef),
    "purpleish pink".casefold(): (0xdf, 0x4e, 0xc8),
    "purpleish".casefold(): (0x98, 0x56, 0x8d),
    "purpley blue".casefold(): (0x5f, 0x34, 0xe7),
    "purpley grey".casefold(): (0x94, 0x7e, 0x94),
    "purpley pink".casefold(): (0xc8, 0x3c, 0xb9),
    "purpley".casefold(): (0x87, 0x56, 0xe4),
    "purplish blue".casefold(): (0x60, 0x1e, 0xf9),
    "purplish brown".casefold(): (0x6b, 0x42, 0x47),
    "purplish grey".casefold(): (0x7a, 0x68, 0x7f),
    "purplish pink".casefold(): (0xce, 0x5d, 0xae),
    "purplish red".casefold(): (0xb0, 0x05, 0x4b),
    "purplish".casefold(): (0x94, 0x56, 0x8c),
    "purply blue".casefold(): (0x66, 0x1a, 0xee),
    "purply pink".casefold(): (0xf0, 0x75, 0xe6),
    "purply".casefold(): (0x98, 0x3f, 0xb2),
    "putty".casefold(): (0xbe, 0xae, 0x8a),
    "racing green".casefold(): (0x01, 0x46, 0x00),
    "radioactive green".casefold(): (0x2c, 0xfa, 0x1f),
    "raspberry".casefold(): (0xb0, 0x01, 0x49),
    "raw sienna".casefold(): (0x9a, 0x62, 0x00),
    "raw umber".casefold(): (0xa7, 0x5e, 0x09),
    "really light blue".casefold(): (0xd4, 0xff, 0xff),
    "red brown".casefold(): (0x8b, 0x2e, 0x16),
    "red orange".casefold(): (0xfd, 0x3c, 0x06),
    "red pink".casefold(): (0xfa, 0x2a, 0x55),
    "red purple".casefold(): (0x82, 0x07, 0x47),
    "red violet".casefold(): (0x9e, 0x01, 0x68),
    "red wine".casefold(): (0x8c, 0x00, 0x34),
    "red".casefold(): (0xe5, 0x00, 0x00),
    "reddish brown".casefold(): (0x7f, 0x2b, 0x0a),
    "reddish grey".casefold(): (0x99, 0x75, 0x70),
    "reddish orange".casefold(): (0xf8, 0x48, 0x1c),
    "reddish pink".casefold(): (0xfe, 0x2c, 0x54),
    "reddish purple".casefold(): (0x91, 0x09, 0x51),
    "reddish".casefold(): (0xc4, 0x42, 0x40),
    "reddy brown".casefold(): (0x6e, 0x10, 0x05),
    "rich blue".casefold(): (0x02, 0x1b, 0xf9),
    "rich purple".casefold(): (0x72, 0x00, 0x58),
    "robin egg blue".casefold(): (0x8a, 0xf1, 0xfe),
    "robin's egg blue".casefold(): (0x98, 0xef, 0xf9),
    "robin's egg".casefold(): (0x6d, 0xed, 0xfd),
    "rosa".casefold(): (0xfe, 0x86, 0xa4),
    "rose pink".casefold(): (0xf7, 0x87, 0x9a),
    "rose red".casefold(): (0xbe, 0x01, 0x3c),
    "rose".casefold(): (0xcf, 0x62, 0x75),
    "rosy pink".casefold(): (0xf6, 0x68, 0x8e),
    "rouge".casefold(): (0xab, 0x12, 0x39),
    "royal blue".casefold(): (0x05, 0x04, 0xaa),
    "royal purple".casefold(): (0x4b, 0x00, 0x6e),
    "royal".casefold(): (0x0c, 0x17, 0x93),
    "ruby".casefold(): (0xca, 0x01, 0x47),
    "russet".casefold(): (0xa1, 0x39, 0x05),
    "rust brown".casefold(): (0x8b, 0x31, 0x03),
    "rust orange".casefold(): (0xc4, 0x55, 0x08),
    "rust red".casefold(): (0xaa, 0x27, 0x04),
    "rust".casefold(): (0xa8, 0x3c, 0x09),
    "rusty orange".casefold(): (0xcd, 0x59, 0x09),
    "rusty red".casefold(): (0xaf, 0x2f, 0x0d),
    "saffron".casefold(): (0xfe, 0xb2, 0x09),
    "sage green".casefold(): (0x88, 0xb3, 0x78),
    "sage".casefold(): (0x87, 0xae, 0x73),
    "salmon pink".casefold(): (0xfe, 0x7b, 0x7c),
    "salmon".casefold(): (0xff, 0x79, 0x6c),
    "sand brown".casefold(): (0xcb, 0xa5, 0x60),
    "sand yellow".casefold(): (0xfc, 0xe1, 0x66),
    "sand".casefold(): (0xe2, 0xca, 0x76),
    "sandstone".casefold(): (0xc9, 0xae, 0x74),
    "sandy brown".casefold(): (0xc4, 0xa6, 0x61),
    "sandy yellow".casefold(): (0xfd, 0xee, 0x73),
    "sandy".casefold(): (0xf1, 0xda, 0x7a),
    "sap green".casefold(): (0x5c, 0x8b, 0x15),
    "sapphire".casefold(): (0x21, 0x38, 0xab),
    "scarlet".casefold(): (0xbe, 0x01, 0x19),
    "sea blue".casefold(): (0x04, 0x74, 0x95),
    "sea green".casefold(): (0x53, 0xfc, 0xa1),
    "sea".casefold(): (0x3c, 0x99, 0x92),
    "seafoam blue".casefold(): (0x78, 0xd1, 0xb6),
    "seafoam green".casefold(): (0x7a, 0xf9, 0xab),
    "seafoam".casefold(): (0x80, 0xf9, 0xad),
    "seaweed green".casefold(): (0x35, 0xad, 0x6b),
    "seaweed".casefold(): (0x18, 0xd1, 0x7b),
    "sepia".casefold(): (0x98, 0x5e, 0x2b),
    "shamrock green".casefold(): (0x02, 0xc1, 0x4d),
    "shamrock".casefold(): (0x01, 0xb4, 0x4c),
    "shit brown".casefold(): (0x7b, 0x58, 0x04),
    "shit green".casefold(): (0x75, 0x80, 0x00),
    "shit".casefold(): (0x7f, 0x5f, 0x00),
    "shocking pink".casefold(): (0xfe, 0x02, 0xa2),
    "sick green".casefold(): (0x9d, 0xb9, 0x2c),
    "sickly green".casefold(): (0x94, 0xb2, 0x1c),
    "sickly yellow".casefold(): (0xd0, 0xe4, 0x29),
    "sienna".casefold(): (0xa9, 0x56, 0x1e),
    "silver".casefold(): (0xc5, 0xc9, 0xc7),
    "sky blue".casefold(): (0x75, 0xbb, 0xfd),
    "sky".casefold(): (0x82, 0xca, 0xfc),
    "slate blue".casefold(): (0x5b, 0x7c, 0x99),
    "slate green".casefold(): (0x65, 0x8d, 0x6d),
    "slate grey".casefold(): (0x59, 0x65, 0x6d),
    "slate".casefold(): (0x51, 0x65, 0x72),
    "slime green".casefold(): (0x99, 0xcc, 0x04),
    "snot green".casefold(): (0x9d, 0xc1, 0x00),
    "snot".casefold(): (0xac, 0xbb, 0x0d),
    "soft blue".casefold(): (0x64, 0x88, 0xea),
    "soft green".casefold(): (0x6f, 0xc2, 0x76),
    "soft pink".casefold(): (0xfd, 0xb0, 0xc0),
    "soft purple".casefold(): (0xa6, 0x6f, 0xb5),
    "spearmint".casefold(): (0x1e, 0xf8, 0x76),
    "spring green".casefold(): (0xa9, 0xf9, 0x71),
    "spruce".casefold(): (0x0a, 0x5f, 0x38),
    "squash".casefold(): (0xf2, 0xab, 0x15),
    "steel blue".casefold(): (0x5a, 0x7d, 0x9a),
    "steel grey".casefold(): (0x6f, 0x82, 0x8a),
    "steel".casefold(): (0x73, 0x85, 0x95),
    "stone".casefold(): (0xad, 0xa5, 0x87),
    "stormy blue".casefold(): (0x50, 0x7b, 0x9c),
    "straw".casefold(): (0xfc, 0xf6, 0x79),
    "strawberry".casefold(): (0xfb, 0x29, 0x43),
    "strong blue".casefold(): (0x0c, 0x06, 0xf7),
    "strong pink".casefold(): (0xff, 0x07, 0x89),
    "sun yellow".casefold(): (0xff, 0xdf, 0x22),
    "sunflower yellow".casefold(): (0xff, 0xda, 0x03),
    "sunflower".casefold(): (0xff, 0xc5, 0x12),
    "sunny yellow".casefold(): (0xff, 0xf9, 0x17),
    "sunshine yellow".casefold(): (0xff, 0xfd, 0x37),
    "swamp green".casefold(): (0x74, 0x85, 0x00),
    "swamp".casefold(): (0x69, 0x83, 0x39),
    "tan brown".casefold(): (0xab, 0x7e, 0x4c),
    "tan green".casefold(): (0xa9, 0xbe, 0x70),
    "tan".casefold(): (0xd1, 0xb2, 0x6f),
    "tangerine".casefold(): (0xff, 0x94, 0x08),
    "taupe".casefold(): (0xb9, 0xa2, 0x81),
    "tea green".casefold(): (0xbd, 0xf8, 0xa3),
    "tea".casefold(): (0x65, 0xab, 0x7c),
    "teal blue".casefold(): (0x01, 0x88, 0x9f),
    "teal green".casefold(): (0x25, 0xa3, 0x6f),
    "teal".casefold(): (0x02, 0x93, 0x86),
    "tealish green".casefold(): (0x0c, 0xdc, 0x73),
    "tealish".casefold(): (0x24, 0xbc, 0xa8),
    "terra cotta".casefold(): (0xc9, 0x64, 0x3b),
    "terracota".casefold(): (0xcb, 0x68, 0x43),
    "terracotta".casefold(): (0xca, 0x66, 0x41),
    "tiffany blue".casefold(): (0x7b, 0xf2, 0xda),
    "tomato red".casefold(): (0xec, 0x2d, 0x01),
    "tomato".casefold(): (0xef, 0x40, 0x26),
    "topaz".casefold(): (0x13, 0xbb, 0xaf),
    "toupe".casefold(): (0xc7, 0xac, 0x7d),
    "toxic green".casefold(): (0x61, 0xde, 0x2a),
    "tree green".casefold(): (0x2a, 0x7e, 0x19),
    "true blue".casefold(): (0x01, 0x0f, 0xcc),
    "true green".casefold(): (0x08, 0x94, 0x04),
    "turquoise blue".casefold(): (0x06, 0xb1, 0xc4),
    "turquoise green".casefold(): (0x04, 0xf4, 0x89),
    "turquoise".casefold(): (0x06, 0xc2, 0xac),
    "turtle green".casefold(): (0x75, 0xb8, 0x4f),
    "twilight blue".casefold(): (0x0a, 0x43, 0x7a),
    "twilight".casefold(): (0x4e, 0x51, 0x8b),
    "ugly blue".casefold(): (0x31, 0x66, 0x8a),
    "ugly brown".casefold(): (0x7d, 0x71, 0x03),
    "ugly green".casefold(): (0x7a, 0x97, 0x03),
    "ugly pink".casefold(): (0xcd, 0x75, 0x84),
    "ugly purple".casefold(): (0xa4, 0x42, 0xa0),
    "ugly yellow".casefold(): (0xd0, 0xc1, 0x01),
    "ultramarine blue".casefold(): (0x18, 0x05, 0xdb),
    "ultramarine".casefold(): (0x20, 0x00, 0xb1),
    "umber".casefold(): (0xb2, 0x64, 0x00),
    "velvet".casefold(): (0x75, 0x08, 0x51),
    "vermillion".casefold(): (0xf4, 0x32, 0x0c),
    "very dark blue".casefold(): (0x00, 0x01, 0x33),
    "very dark brown".casefold(): (0x1d, 0x02, 0x00),
    "very dark green".casefold(): (0x06, 0x2e, 0x03),
    "very dark purple".casefold(): (0x2a, 0x01, 0x34),
    "very light blue".casefold(): (0xd5, 0xff, 0xff),
    "very light brown".casefold(): (0xd3, 0xb6, 0x83),
    "very light green".casefold(): (0xd1, 0xff, 0xbd),
    "very light pink".casefold(): (0xff, 0xf4, 0xf2),
    "very light purple".casefold(): (0xf6, 0xce, 0xfc),
    "very pale blue".casefold(): (0xd6, 0xff, 0xfe),
    "very pale green".casefold(): (0xcf, 0xfd, 0xbc),
    "vibrant blue".casefold(): (0x03, 0x39, 0xf8),
    "vibrant green".casefold(): (0x0a, 0xdd, 0x08),
    "vibrant purple".casefold(): (0xad, 0x03, 0xde),
    "violet blue".casefold(): (0x51, 0x0a, 0xc9),
    "violet pink".casefold(): (0xfb, 0x5f, 0xfc),
    "violet red".casefold(): (0xa5, 0x00, 0x55),
    "violet".casefold(): (0x9a, 0x0e, 0xea),
    "viridian".casefold(): (0x1e, 0x91, 0x67),
    "vivid blue".casefold(): (0x15, 0x2e, 0xff),
    "vivid green".casefold(): (0x2f, 0xef, 0x10),
    "vivid purple".casefold(): (0x99, 0x00, 0xfa),
    "vomit green".casefold(): (0x89, 0xa2, 0x03),
    "vomit yellow".casefold(): (0xc7, 0xc1, 0x0c),
    "vomit".casefold(): (0xa2, 0xa4, 0x15),
    "warm blue".casefold(): (0x4b, 0x57, 0xdb),
    "warm brown".casefold(): (0x96, 0x4e, 0x02),
    "warm grey".casefold(): (0x97, 0x8a, 0x84),
    "warm pink".casefold(): (0xfb, 0x55, 0x81),
    "warm purple".casefold(): (0x95, 0x2e, 0x8f),
    "washed out green".casefold(): (0xbc, 0xf5, 0xa6),
    "water blue".casefold(): (0x0e, 0x87, 0xcc),
    "watermelon".casefold(): (0xfd, 0x46, 0x59),
    "weird green".casefold(): (0x3a, 0xe5, 0x7f),
    "wheat".casefold(): (0xfb, 0xdd, 0x7e),
    "white".casefold(): (0xff, 0xff, 0xff),
    "windows blue".casefold(): (0x37, 0x78, 0xbf),
    "wine red".casefold(): (0x7b, 0x03, 0x23),
    "wine".casefold(): (0x80, 0x01, 0x3f),
    "wintergreen".casefold(): (0x20, 0xf9, 0x86),
    "wisteria".casefold(): (0xa8, 0x7d, 0xc2),
    "yellow brown".casefold(): (0xb7, 0x94, 0x00),
    "yellow green".casefold(): (0xc0, 0xfb, 0x2d),
    "yellow ochre".casefold(): (0xcb, 0x9d, 0x06),
    "yellow orange".casefold(): (0xfc, 0xb0, 0x01),
    "yellow tan".casefold(): (0xff, 0xe3, 0x6e),
    "yellow".casefold(): (0xff, 0xff, 0x14),
    "yellow/green".casefold(): (0xc8, 0xfd, 0x3d),
    "yellowgreen".casefold(): (0xbb, 0xf9, 0x0f),
    "yellowish brown".casefold(): (0x9b, 0x7a, 0x01),
    "yellowish green".casefold(): (0xb0, 0xdd, 0x16),
    "yellowish orange".casefold(): (0xff, 0xab, 0x0f),
    "yellowish tan".casefold(): (0xfc, 0xfc, 0x81),
    "yellowish".casefold(): (0xfa, 0xee, 0x66),
    "yellowy brown".casefold(): (0xae, 0x8b, 0x0c),
    "yellowy green".casefold(): (0xbf, 0xf1, 0x28)
}

COLOR_NAMES = {**MPL_COLORS, **XKCD_COLORS, **X11_COLORS}


def to_rgb_list(color: tp.Any) -> tp.Tuple[int, int, int]:
    """Convert a color specification to a RGB tuple.

    Converts a color specification to a RGB tuple.
    Different formats are supported.

    Parameters
    ----------
    color
        Color specification.

    Returns
    -------
    tuple
        RGB tuple of integers 0-255.

    Raises
    ------
    ArgumentError
        Unrecognized/unsupported color specification.
    """
    err_len = 'Incorrect number of RGB(A) components'
    err_float = 'Cannot convert float-type components'
    err_int = 'Cannot convert integer-type components'
    rgb = None
    if isinstance(color, float):
        # Grayscale from 0 to 1.0
        if not 0.0 <= color <= 1.0:
            raise ArgumentError('color', 'Grayscale expected from 0 to 1')
        rgb = [255*color for _ in range(3)]
    elif isinstance(color, str):
        # String specification.  Several possible formats
        # Check first color
        if color.startswith('#'):  # standard color specification as #RGB
            if len(color) in (7, 9):
                # 7: format #RGB, 9: format #RGBA, alpha ignored
                rgb = (int(color[1:3], base=16),
                       int(color[3:5], base=16),
                       int(color[5:7], base=16))
            elif len(color) == 4:
                # Assume a shortened case: #rrggbb
                rgb = (int(2*color[1], base=16),
                       int(2*color[2], base=16),
                       int(2*color[3], base=16))
            else:
                raise ArgumentError('color', 'Unrecognized "#RGB(A)" format')
        elif ',' in color:
            colors = color.strip('()').split(',')
            if len(colors) == 3:
                if any('.' in item for item in colors):
                    try:
                        rgb = tuple(int(float(item)*255) for item in colors)
                    except ValueError as err:
                        raise ArgumentError('color', err_float) from err
                else:
                    try:
                        rgb = tuple(int(item) for item in colors)
                    except ValueError as err:
                        raise ArgumentError('color', err_int) from err
            else:
                raise ArgumentError('color', err_len)
        elif color in COLOR_NAMES:
            rgb = COLOR_NAMES[color]
        else:
            raise ArgumentError('color', 'Unknown color name/code.')
    elif isinstance(color, (tuple, list)):
        if len(color) in (3, 4):
            if all(isinstance(item, (float, int)) for item in color):
                if any(isinstance(item, float) for item in color):
                    rgb = tuple(int(item*255) for item in color[:3])
                else:
                    rgb = tuple(color[:3])
            elif all(isinstance(item, str) for item in color):
                if any('.' in item for item in color):
                    try:
                        rgb = [int(float(item)*255) for item in color[:3]]
                    except ValueError as err:
                        raise ArgumentError('color', err_float) from err
                else:
                    try:
                        rgb = [int(item) for item in color[:3]]
                    except ValueError as err:
                        raise ArgumentError('color', err_int) from err
            else:
                raise ArgumentError('color', 'Unsupported types in RGB list.')
        else:
            raise ArgumentError('color', err_len)
    else:
        raise ArgumentError('color', 'Unsupported type of color specification')

    if rgb is None:
        raise ValueError('Unable to parse the RGB specifications.')
    elif min(rgb) < 0 or max(rgb) > 255:
        raise ValueError('RGB parameters outside valid range.')

    return rgb
